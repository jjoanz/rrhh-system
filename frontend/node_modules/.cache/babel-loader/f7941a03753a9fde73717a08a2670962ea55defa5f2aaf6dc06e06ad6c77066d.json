{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josemontedeoca\\\\rrhh-system\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.jsx\n// src/context/AuthContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [permisos, setPermisos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n  // =========================\n  // VERIFICAR SI TOKEN ES VÁLIDO\n  // =========================\n  const isTokenValid = token => {\n    if (!token) return false;\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      const currentTime = Date.now() / 1000;\n\n      // Verificar si el token ha expirado\n      if (payload.exp < currentTime) {\n        console.log('Token expirado');\n        return false;\n      }\n      return true;\n    } catch (error) {\n      console.error('Token malformado:', error);\n      return false;\n    }\n  };\n\n  // =========================\n  // MAPEO DEL ESTADO (CORREGIDO PARA SQL SERVER BIT)\n  // =========================\n  const mapEstado = estado => {\n    // SQL Server bit: 1 = Activo, 0 = Inactivo\n    return estado === 1 || estado === true ? 'Activo' : 'Inactivo';\n  };\n  const formatUser = userData => ({\n    id: userData.id,\n    name: `${userData.nombre} ${userData.apellido}`.trim() || 'Usuario',\n    position: userData.puesto || userData.rol || '',\n    role: userData.rol || 'Sistema',\n    email: userData.email,\n    empleadoId: userData.empleadoId,\n    estado: mapEstado(userData.estado)\n  });\n\n  // =========================\n  // LOGIN\n  // =========================\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      const {\n        token,\n        user: userData,\n        permisos: permisosData\n      } = res.data;\n      localStorage.setItem('rrhh_token', token);\n      setUser(formatUser(userData));\n      setPermisos(permisosData || []);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error al iniciar sesión'\n      };\n    }\n  };\n\n  // =========================\n  // LOGOUT\n  // =========================\n  const logout = () => {\n    localStorage.removeItem('rrhh_token');\n    setUser(null);\n    setPermisos([]);\n  };\n\n  // =========================\n  // VERIFICAR TOKEN (CORREGIDO)\n  // =========================\n  const verifyUser = async () => {\n    const token = localStorage.getItem('rrhh_token');\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n\n    // Verificar si el token es válido antes de hacer la llamada\n    if (!isTokenValid(token)) {\n      console.log('Token inválido o expirado, limpiando localStorage');\n      logout();\n      setLoading(false);\n      return;\n    }\n    try {\n      const res = await axios.get(`${API_URL}/auth/verify`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const {\n        user: userData,\n        permisos: permisosData\n      } = res.data;\n      setUser(formatUser(userData));\n      setPermisos(permisosData || []);\n    } catch (error) {\n      var _error$response2;\n      console.error('Verify user error:', error);\n\n      // Si es error 401 (no autorizado), limpiar token\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        console.log('Token rechazado por el servidor, limpiando localStorage');\n      }\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // =========================\n  // FORGOT PASSWORD\n  // =========================\n  const forgotPassword = async email => {\n    try {\n      const res = await axios.post(`${API_URL}/auth/forgot-password`, {\n        email\n      });\n      return res.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Forgot password error:', error);\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Error al enviar email'\n      };\n    }\n  };\n\n  // =========================\n  // RESET PASSWORD\n  // =========================\n  const resetPassword = async (token, newPassword) => {\n    try {\n      const res = await axios.post(`${API_URL}/auth/reset-password`, {\n        token,\n        newPassword\n      });\n      return res.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Reset password error:', error);\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Error al restablecer contraseña'\n      };\n    }\n  };\n\n  // =========================\n  // CAMBIO DE CONTRASEÑA (USER LOGUEADO)\n  // =========================\n  const changePassword = async (currentPassword, newPassword) => {\n    const token = localStorage.getItem('rrhh_token');\n    if (!token || !isTokenValid(token)) {\n      return {\n        success: false,\n        error: 'No estás autenticado o tu sesión ha expirado'\n      };\n    }\n    try {\n      const res = await axios.post(`${API_URL}/auth/change-password`, {\n        currentPassword,\n        newPassword\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return res.data;\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response6$data;\n      console.error('Change password error:', error);\n\n      // Si es error 401, limpiar token\n      if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 401) {\n        logout();\n        return {\n          success: false,\n          error: 'Tu sesión ha expirado. Por favor, inicia sesión nuevamente.'\n        };\n      }\n      return {\n        success: false,\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Error cambiando contraseña'\n      };\n    }\n  };\n  useEffect(() => {\n    verifyUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      permisos,\n      login,\n      logout,\n      forgotPassword,\n      resetPassword,\n      changePassword,\n      loading,\n      isTokenValid\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PW+D/0JtsO+/Fpq7WTPIrDkqrA8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","permisos","setPermisos","loading","setLoading","API_URL","process","env","REACT_APP_API_URL","isTokenValid","token","payload","JSON","parse","atob","split","currentTime","Date","now","exp","console","log","error","mapEstado","estado","formatUser","userData","id","name","nombre","apellido","trim","position","puesto","rol","role","email","empleadoId","login","password","res","post","permisosData","data","localStorage","setItem","success","_error$response","_error$response$data","response","message","logout","removeItem","verifyUser","getItem","get","headers","Authorization","_error$response2","status","forgotPassword","_error$response3","_error$response3$data","resetPassword","newPassword","_error$response4","_error$response4$data","changePassword","currentPassword","_error$response5","_error$response6","_error$response6$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/josemontedeoca/rrhh-system/frontend/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.jsx\r\n// src/context/AuthContext.jsx\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [permisos, setPermisos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n  // =========================\r\n  // VERIFICAR SI TOKEN ES VÁLIDO\r\n  // =========================\r\n  const isTokenValid = (token) => {\r\n    if (!token) return false;\r\n    \r\n    try {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      const currentTime = Date.now() / 1000;\r\n      \r\n      // Verificar si el token ha expirado\r\n      if (payload.exp < currentTime) {\r\n        console.log('Token expirado');\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Token malformado:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // MAPEO DEL ESTADO (CORREGIDO PARA SQL SERVER BIT)\r\n  // =========================\r\n  const mapEstado = (estado) => {\r\n    // SQL Server bit: 1 = Activo, 0 = Inactivo\r\n    return (estado === 1 || estado === true) ? 'Activo' : 'Inactivo';\r\n  };\r\n\r\n  const formatUser = (userData) => ({\r\n    id: userData.id,\r\n    name: `${userData.nombre} ${userData.apellido}`.trim() || 'Usuario',\r\n    position: userData.puesto || userData.rol || '',\r\n    role: userData.rol || 'Sistema',\r\n    email: userData.email,\r\n    empleadoId: userData.empleadoId,\r\n    estado: mapEstado(userData.estado)\r\n  });\r\n\r\n  // =========================\r\n  // LOGIN\r\n  // =========================\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await axios.post(`${API_URL}/auth/login`, { email, password });\r\n      const { token, user: userData, permisos: permisosData } = res.data;\r\n\r\n      localStorage.setItem('rrhh_token', token);\r\n\r\n      setUser(formatUser(userData));\r\n      setPermisos(permisosData || []);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Error al iniciar sesión'\r\n      };\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // LOGOUT\r\n  // =========================\r\n  const logout = () => {\r\n    localStorage.removeItem('rrhh_token');\r\n    setUser(null);\r\n    setPermisos([]);\r\n  };\r\n\r\n  // =========================\r\n  // VERIFICAR TOKEN (CORREGIDO)\r\n  // =========================\r\n  const verifyUser = async () => {\r\n    const token = localStorage.getItem('rrhh_token');\r\n    \r\n    if (!token) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Verificar si el token es válido antes de hacer la llamada\r\n    if (!isTokenValid(token)) {\r\n      console.log('Token inválido o expirado, limpiando localStorage');\r\n      logout();\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get(`${API_URL}/auth/verify`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      const { user: userData, permisos: permisosData } = res.data;\r\n\r\n      setUser(formatUser(userData));\r\n      setPermisos(permisosData || []);\r\n    } catch (error) {\r\n      console.error('Verify user error:', error);\r\n      \r\n      // Si es error 401 (no autorizado), limpiar token\r\n      if (error.response?.status === 401) {\r\n        console.log('Token rechazado por el servidor, limpiando localStorage');\r\n      }\r\n      \r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // FORGOT PASSWORD\r\n  // =========================\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      const res = await axios.post(`${API_URL}/auth/forgot-password`, { email });\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error('Forgot password error:', error);\r\n      return { success: false, error: error.response?.data?.message || 'Error al enviar email' };\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // RESET PASSWORD\r\n  // =========================\r\n  const resetPassword = async (token, newPassword) => {\r\n    try {\r\n      const res = await axios.post(`${API_URL}/auth/reset-password`, { token, newPassword });\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error('Reset password error:', error);\r\n      return { success: false, error: error.response?.data?.message || 'Error al restablecer contraseña' };\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // CAMBIO DE CONTRASEÑA (USER LOGUEADO)\r\n  // =========================\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    const token = localStorage.getItem('rrhh_token');\r\n    \r\n    if (!token || !isTokenValid(token)) {\r\n      return { success: false, error: 'No estás autenticado o tu sesión ha expirado' };\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${API_URL}/auth/change-password`,\r\n        { currentPassword, newPassword },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error('Change password error:', error);\r\n      \r\n      // Si es error 401, limpiar token\r\n      if (error.response?.status === 401) {\r\n        logout();\r\n        return { success: false, error: 'Tu sesión ha expirado. Por favor, inicia sesión nuevamente.' };\r\n      }\r\n      \r\n      return { success: false, error: error.response?.data?.message || 'Error cambiando contraseña' };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    verifyUser();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        permisos,\r\n        login,\r\n        logout,\r\n        forgotPassword,\r\n        resetPassword,\r\n        changePassword,\r\n        loading,\r\n        isTokenValid\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
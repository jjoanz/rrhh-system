{"ast":null,"code":"// src/api/nominaService.js\nimport api from'./api';// ==========================================\n// CONFIGURACIÓN DE NÓMINA\n// ==========================================\n// Obtener configuración de nómina (ISR, TSS, etc.)\nexport const getConfiguracion=async()=>{try{const response=await api.get('/nomina/configuracion');return response.data;}catch(error){console.error('Error al obtener configuración:',error);throw error;}};// Actualizar configuración de nómina\nexport const actualizarConfiguracion=async configuraciones=>{try{const response=await api.put('/nomina/configuracion',{configuraciones});return response.data;}catch(error){console.error('Error al actualizar configuración:',error);throw error;}};// ==========================================\n// NÓMINAS\n// ==========================================\n// Obtener todas las nóminas con filtros opcionales\nexport const getNominas=async function(){let filtros=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const params=new URLSearchParams();if(filtros.periodo)params.append('periodo',filtros.periodo);if(filtros.empleadoId)params.append('empleadoId',filtros.empleadoId);if(filtros.estado)params.append('estado',filtros.estado);const response=await api.get(`/nomina/list?${params}`);return response.data;}catch(error){console.error('Error al obtener nóminas:',error);throw error;}};// Obtener detalle de nómina por ID\nexport const getNominaById=async id=>{try{const response=await api.get(`/nomina/${id}`);return response.data;}catch(error){console.error('Error al obtener detalle de nómina:',error);throw error;}};// Procesar nueva nómina\nexport const procesarNomina=async data=>{try{const response=await api.post('/nomina/procesar',data);return response.data;}catch(error){console.error('Error al procesar nómina:',error);throw error;}};// Marcar nóminas como pagadas\nexport const marcarNominaPagada=async data=>{try{const response=await api.put('/nomina/pagar',data);return response.data;}catch(error){console.error('Error al marcar nómina como pagada:',error);throw error;}};// Generar reporte de nómina\nexport const generarReporteNomina=async function(){let filtros=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const params=new URLSearchParams();if(filtros.periodo)params.append('periodo',filtros.periodo);if(filtros.tipo)params.append('tipo',filtros.tipo);const response=await api.get(`/nomina/reportes/generar?${params}`);return response.data;}catch(error){console.error('Error al generar reporte:',error);throw error;}};// Eliminar nómina\nexport const eliminarNomina=async id=>{try{const response=await api.delete(`/nomina/${id}`);return response.data;}catch(error){console.error('Error al eliminar nómina:',error);throw error;}};// ==========================================\n// EMPLEADOS\n// ==========================================\n// Obtener empleados activos para nómina\nexport const getEmpleadosActivos=async()=>{try{const response=await api.get('/nomina/empleados-activos');return response.data;}catch(error){console.error('Error al obtener empleados activos:',error);throw error;}};","map":{"version":3,"names":["api","getConfiguracion","response","get","data","error","console","actualizarConfiguracion","configuraciones","put","getNominas","filtros","arguments","length","undefined","params","URLSearchParams","periodo","append","empleadoId","estado","getNominaById","id","procesarNomina","post","marcarNominaPagada","generarReporteNomina","tipo","eliminarNomina","delete","getEmpleadosActivos"],"sources":["C:/Users/josemontedeoca/rrhh-system/frontend/src/api/nominaService.js"],"sourcesContent":["// src/api/nominaService.js\r\nimport api from './api';\r\n\r\n// ==========================================\r\n// CONFIGURACIÓN DE NÓMINA\r\n// ==========================================\r\n\r\n// Obtener configuración de nómina (ISR, TSS, etc.)\r\nexport const getConfiguracion = async () => {\r\n  try {\r\n    const response = await api.get('/nomina/configuracion');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener configuración:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Actualizar configuración de nómina\r\nexport const actualizarConfiguracion = async (configuraciones) => {\r\n  try {\r\n    const response = await api.put('/nomina/configuracion', { configuraciones });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al actualizar configuración:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ==========================================\r\n// NÓMINAS\r\n// ==========================================\r\n\r\n// Obtener todas las nóminas con filtros opcionales\r\nexport const getNominas = async (filtros = {}) => {\r\n  try {\r\n    const params = new URLSearchParams();\r\n    if (filtros.periodo) params.append('periodo', filtros.periodo);\r\n    if (filtros.empleadoId) params.append('empleadoId', filtros.empleadoId);\r\n    if (filtros.estado) params.append('estado', filtros.estado);\r\n\r\n    const response = await api.get(`/nomina/list?${params}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener nóminas:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener detalle de nómina por ID\r\nexport const getNominaById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/nomina/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener detalle de nómina:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Procesar nueva nómina\r\nexport const procesarNomina = async (data) => {\r\n  try {\r\n    const response = await api.post('/nomina/procesar', data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al procesar nómina:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Marcar nóminas como pagadas\r\nexport const marcarNominaPagada = async (data) => {\r\n  try {\r\n    const response = await api.put('/nomina/pagar', data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al marcar nómina como pagada:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Generar reporte de nómina\r\nexport const generarReporteNomina = async (filtros = {}) => {\r\n  try {\r\n    const params = new URLSearchParams();\r\n    if (filtros.periodo) params.append('periodo', filtros.periodo);\r\n    if (filtros.tipo) params.append('tipo', filtros.tipo);\r\n\r\n    const response = await api.get(`/nomina/reportes/generar?${params}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al generar reporte:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Eliminar nómina\r\nexport const eliminarNomina = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/nomina/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al eliminar nómina:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ==========================================\r\n// EMPLEADOS\r\n// ==========================================\r\n\r\n// Obtener empleados activos para nómina\r\nexport const getEmpleadosActivos = async () => {\r\n  try {\r\n    const response = await api.get('/nomina/empleados-activos');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener empleados activos:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josemontedeoca\\\\rrhh-system\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/// src/context/AuthContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [permisos, setPermisos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n  // ============================\n  // FUNCIÓN PARA OBTENER TOKEN\n  // ============================\n  const getStoredToken = () => {\n    const token = localStorage.getItem('rrhh_token');\n    console.log('getStoredToken llamado, token:', token ? 'presente' : 'ausente');\n    return token;\n  };\n\n  // ============================\n  // CONFIGURAR AXIOS INTERCEPTORS\n  // ============================\n  useEffect(() => {\n    const requestInterceptor = axios.interceptors.request.use(config => {\n      const token = getStoredToken();\n      if (token) config.headers.Authorization = `Bearer ${token}`;\n      return config;\n    }, error => Promise.reject(error));\n    const responseInterceptor = axios.interceptors.response.use(response => response, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) logout();\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, []);\n\n  // ============================\n  // VALIDAR TOKEN\n  // ============================\n  const isTokenValid = token => {\n    if (!token) return false;\n    try {\n      if (token.length < 10) return false;\n      if (token.includes('.')) {\n        const parts = token.split('.');\n        if (parts.length !== 3) return false;\n        const payload = JSON.parse(atob(parts[1]));\n        if (!payload.exp) return true;\n        const currentTime = Date.now() / 1000;\n        return payload.exp > currentTime;\n      } else {\n        return true;\n      }\n    } catch (error) {\n      console.error('Error validando token:', error);\n      return false;\n    }\n  };\n  const mapEstado = estado => estado === 1 || estado === true ? 'Activo' : 'Inactivo';\n  const formatUser = userData => ({\n    id: userData.id,\n    name: `${userData.nombre || ''} ${userData.apellido || ''}`.trim() || 'Usuario',\n    position: userData.puesto || userData.rol || '',\n    role: userData.rol || 'Sistema',\n    email: userData.email,\n    empleadoId: userData.empleadoId,\n    estado: mapEstado(userData.estado)\n  });\n\n  // ============================\n  // LOGIN\n  // ============================\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.message || 'Error al iniciar sesión');\n      localStorage.setItem('rrhh_token', data.token);\n      const formattedUser = formatUser(data.user);\n      setUser(formattedUser);\n      setPermisos(data.permisos || []);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Error en login:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ============================\n  // LOGOUT\n  // ============================\n  const logout = () => {\n    localStorage.removeItem('rrhh_token');\n    setUser(null);\n    setPermisos([]);\n  };\n\n  // ============================\n  // VERIFICAR USUARIO\n  // ============================\n  const verifyUser = async () => {\n    setLoading(true);\n    const token = getStoredToken();\n    if (!token || !isTokenValid(token)) {\n      logout();\n      setLoading(false);\n      return;\n    }\n    try {\n      var _data$user$estado;\n      const res = await fetch(`${API_URL}/auth/verify`, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await res.json();\n      if (!data.user) {\n        logout();\n        return;\n      }\n      const userEstado = (_data$user$estado = data.user.estado) !== null && _data$user$estado !== void 0 ? _data$user$estado : 1;\n      if (userEstado === 1 || userEstado === true) {\n        setUser(formatUser(data.user));\n        setPermisos(data.permisos || []);\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error('Error verificando usuario:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    verifyUser();\n  }, []);\n\n  // ============================\n  // FORGOT PASSWORD\n  // ============================\n  const forgotPassword = async email => {\n    try {\n      const res = await fetch(`${API_URL}/auth/forgot-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.message || 'Error al enviar email');\n      return {\n        success: true,\n        message: data.message || 'Email enviado correctamente'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n\n  // ============================\n  // RESET PASSWORD\n  // ============================\n  const resetPassword = async (token, newPassword) => {\n    try {\n      const res = await fetch(`${API_URL}/auth/reset-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          newPassword\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.message || 'Error al restablecer contraseña');\n      return {\n        success: true,\n        message: data.message || 'Contraseña actualizada correctamente'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n\n  // ============================\n  // CHANGE PASSWORD (usuario logueado)\n  // ============================\n  const changePassword = async (currentPassword, newPassword) => {\n    const token = getStoredToken();\n    if (!token || !isTokenValid(token)) return {\n      success: false,\n      error: 'No estás autenticado'\n    };\n    try {\n      const res = await fetch(`${API_URL}/auth/change-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          currentPassword,\n          newPassword\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        if (res.status === 401) logout();\n        throw new Error(data.message || 'Error cambiando contraseña');\n      }\n      return {\n        success: true,\n        message: data.message || 'Contraseña cambiada correctamente'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n\n  // ============================\n  // FUNCIONES DE DEBUG\n  // ============================\n  const getTokenInfo = () => {\n    const token = getStoredToken();\n    if (!token) return {\n      hasToken: false\n    };\n    const info = {\n      hasToken: true,\n      tokenLength: token.length,\n      tokenPreview: token.substring(0, 20) + '...',\n      isValid: isTokenValid(token)\n    };\n    if (token.includes('.')) {\n      try {\n        info.payload = JSON.parse(atob(token.split('.')[1]));\n        info.isJWT = true;\n      } catch (e) {\n        info.isJWT = false;\n        info.parseError = e.message;\n      }\n    } else {\n      info.isJWT = false;\n      info.tokenType = 'simple';\n    }\n    return info;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      permisos,\n      login,\n      logout,\n      getStoredToken,\n      forgotPassword,\n      resetPassword,\n      changePassword,\n      loading,\n      isTokenValid,\n      getTokenInfo,\n      verifyUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"7QC73wka/m066hchGlXd9fI5dHI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth debe usarse dentro de un AuthProvider');\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","permisos","setPermisos","loading","setLoading","API_URL","process","env","REACT_APP_API_URL","getStoredToken","token","localStorage","getItem","console","log","requestInterceptor","interceptors","request","use","config","headers","Authorization","error","Promise","reject","responseInterceptor","response","_error$response","status","logout","eject","isTokenValid","length","includes","parts","split","payload","JSON","parse","atob","exp","currentTime","Date","now","mapEstado","estado","formatUser","userData","id","name","nombre","apellido","trim","position","puesto","rol","role","email","empleadoId","login","password","res","fetch","method","body","stringify","data","json","ok","Error","message","setItem","formattedUser","success","removeItem","verifyUser","_data$user$estado","userEstado","forgotPassword","resetPassword","newPassword","changePassword","currentPassword","getTokenInfo","hasToken","info","tokenLength","tokenPreview","substring","isValid","isJWT","e","parseError","tokenType","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/josemontedeoca/rrhh-system/frontend/src/context/AuthContext.jsx"],"sourcesContent":["/// src/context/AuthContext.jsx\r\nimport React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null)\r\n  const [permisos, setPermisos] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\r\n\r\n  // ============================\r\n  // FUNCIÓN PARA OBTENER TOKEN\r\n  // ============================\r\n  const getStoredToken = () => {\r\n    const token = localStorage.getItem('rrhh_token')\r\n    console.log('getStoredToken llamado, token:', token ? 'presente' : 'ausente')\r\n    return token\r\n  }\r\n\r\n  // ============================\r\n  // CONFIGURAR AXIOS INTERCEPTORS\r\n  // ============================\r\n  useEffect(() => {\r\n    const requestInterceptor = axios.interceptors.request.use(\r\n      (config) => {\r\n        const token = getStoredToken()\r\n        if (token) config.headers.Authorization = `Bearer ${token}`\r\n        return config\r\n      },\r\n      (error) => Promise.reject(error)\r\n    )\r\n\r\n    const responseInterceptor = axios.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        if (error.response?.status === 401) logout()\r\n        return Promise.reject(error)\r\n      }\r\n    )\r\n\r\n    return () => {\r\n      axios.interceptors.request.eject(requestInterceptor)\r\n      axios.interceptors.response.eject(responseInterceptor)\r\n    }\r\n  }, [])\r\n\r\n  // ============================\r\n  // VALIDAR TOKEN\r\n  // ============================\r\n  const isTokenValid = (token) => {\r\n    if (!token) return false\r\n\r\n    try {\r\n      if (token.length < 10) return false\r\n\r\n      if (token.includes('.')) {\r\n        const parts = token.split('.')\r\n        if (parts.length !== 3) return false\r\n\r\n        const payload = JSON.parse(atob(parts[1]))\r\n        if (!payload.exp) return true\r\n\r\n        const currentTime = Date.now() / 1000\r\n        return payload.exp > currentTime\r\n      } else {\r\n        return true\r\n      }\r\n    } catch (error) {\r\n      console.error('Error validando token:', error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  const mapEstado = (estado) => (estado === 1 || estado === true ? 'Activo' : 'Inactivo')\r\n\r\n  const formatUser = (userData) => ({\r\n    id: userData.id,\r\n    name: `${userData.nombre || ''} ${userData.apellido || ''}`.trim() || 'Usuario',\r\n    position: userData.puesto || userData.rol || '',\r\n    role: userData.rol || 'Sistema',\r\n    email: userData.email,\r\n    empleadoId: userData.empleadoId,\r\n    estado: mapEstado(userData.estado),\r\n  })\r\n\r\n  // ============================\r\n  // LOGIN\r\n  // ============================\r\n  const login = async (email, password) => {\r\n    setLoading(true)\r\n    try {\r\n      const res = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      })\r\n\r\n      const data = await res.json()\r\n      if (!res.ok) throw new Error(data.message || 'Error al iniciar sesión')\r\n\r\n      localStorage.setItem('rrhh_token', data.token)\r\n      const formattedUser = formatUser(data.user)\r\n      setUser(formattedUser)\r\n      setPermisos(data.permisos || [])\r\n      return { success: true }\r\n    } catch (error) {\r\n      console.error('Error en login:', error)\r\n      return { success: false, error: error.message }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // ============================\r\n  // LOGOUT\r\n  // ============================\r\n  const logout = () => {\r\n    localStorage.removeItem('rrhh_token')\r\n    setUser(null)\r\n    setPermisos([])\r\n  }\r\n\r\n  // ============================\r\n  // VERIFICAR USUARIO\r\n  // ============================\r\n  const verifyUser = async () => {\r\n    setLoading(true)\r\n    const token = getStoredToken()\r\n\r\n    if (!token || !isTokenValid(token)) {\r\n      logout()\r\n      setLoading(false)\r\n      return\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(`${API_URL}/auth/verify`, {\r\n        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },\r\n      })\r\n\r\n      const data = await res.json()\r\n\r\n      if (!data.user) {\r\n        logout()\r\n        return\r\n      }\r\n\r\n      const userEstado = data.user.estado ?? 1\r\n      if (userEstado === 1 || userEstado === true) {\r\n        setUser(formatUser(data.user))\r\n        setPermisos(data.permisos || [])\r\n      } else {\r\n        logout()\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verificando usuario:', error)\r\n      logout()\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    verifyUser()\r\n  }, [])\r\n\r\n  // ============================\r\n  // FORGOT PASSWORD\r\n  // ============================\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      const res = await fetch(`${API_URL}/auth/forgot-password`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      })\r\n      const data = await res.json()\r\n      if (!res.ok) throw new Error(data.message || 'Error al enviar email')\r\n      return { success: true, message: data.message || 'Email enviado correctamente' }\r\n    } catch (error) {\r\n      return { success: false, error: error.message }\r\n    }\r\n  }\r\n\r\n  // ============================\r\n  // RESET PASSWORD\r\n  // ============================\r\n  const resetPassword = async (token, newPassword) => {\r\n    try {\r\n      const res = await fetch(`${API_URL}/auth/reset-password`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ token, newPassword }),\r\n      })\r\n      const data = await res.json()\r\n      if (!res.ok) throw new Error(data.message || 'Error al restablecer contraseña')\r\n      return { success: true, message: data.message || 'Contraseña actualizada correctamente' }\r\n    } catch (error) {\r\n      return { success: false, error: error.message }\r\n    }\r\n  }\r\n\r\n  // ============================\r\n  // CHANGE PASSWORD (usuario logueado)\r\n  // ============================\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    const token = getStoredToken()\r\n    if (!token || !isTokenValid(token)) return { success: false, error: 'No estás autenticado' }\r\n\r\n    try {\r\n      const res = await fetch(`${API_URL}/auth/change-password`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },\r\n        body: JSON.stringify({ currentPassword, newPassword }),\r\n      })\r\n\r\n      const data = await res.json()\r\n      if (!res.ok) {\r\n        if (res.status === 401) logout()\r\n        throw new Error(data.message || 'Error cambiando contraseña')\r\n      }\r\n\r\n      return { success: true, message: data.message || 'Contraseña cambiada correctamente' }\r\n    } catch (error) {\r\n      return { success: false, error: error.message }\r\n    }\r\n  }\r\n\r\n  // ============================\r\n  // FUNCIONES DE DEBUG\r\n  // ============================\r\n  const getTokenInfo = () => {\r\n    const token = getStoredToken()\r\n    if (!token) return { hasToken: false }\r\n\r\n    const info = {\r\n      hasToken: true,\r\n      tokenLength: token.length,\r\n      tokenPreview: token.substring(0, 20) + '...',\r\n      isValid: isTokenValid(token),\r\n    }\r\n\r\n    if (token.includes('.')) {\r\n      try {\r\n        info.payload = JSON.parse(atob(token.split('.')[1]))\r\n        info.isJWT = true\r\n      } catch (e) {\r\n        info.isJWT = false\r\n        info.parseError = e.message\r\n      }\r\n    } else {\r\n      info.isJWT = false\r\n      info.tokenType = 'simple'\r\n    }\r\n\r\n    return info\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        permisos,\r\n        login,\r\n        logout,\r\n        getStoredToken,\r\n        forgotPassword,\r\n        resetPassword,\r\n        changePassword,\r\n        loading,\r\n        isTokenValid,\r\n        getTokenInfo,\r\n        verifyUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext)\r\n  if (!context) throw new Error('useAuth debe usarse dentro de un AuthProvider')\r\n  return context\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
// frontend/src/api/postulacionesService.js
import api from './api';

const postulacionesService = {
  // Obtener todas las postulaciones con filtros
  async getPostulaciones(filtros = {}) {
    try {
      console.log('üìã Obteniendo postulaciones con filtros:', filtros);
      const params = new URLSearchParams();
      
      Object.keys(filtros).forEach(key => {
        if (filtros[key] !== '' && filtros[key] !== null && filtros[key] !== undefined) {
          params.append(key, filtros[key]);
        }
      });
      
      const response = await api.get(`/postulaciones?${params.toString()}`);
      console.log('‚úÖ Postulaciones obtenidas:', response.data?.length || 0);
      return response.data;
    } catch (error) {
      console.error('‚ùå Error al obtener postulaciones:', error.response?.data || error.message);
      throw error;
    }
  },

  // Obtener postulaci√≥n por ID
  async getPostulacionById(id) {
    try {
      console.log('üîç Obteniendo postulaci√≥n:', id);
      const response = await api.get(`/postulaciones/${id}`);
      console.log('‚úÖ Postulaci√≥n obtenida:', response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå Error al obtener postulaci√≥n:', error.response?.data || error.message);
      throw error;
    }
  },

  // Crear nueva postulaci√≥n
  async crearPostulacion(postulacion) {
    try {
      console.log('‚ûï Creando postulaci√≥n:', postulacion);
      const response = await api.post('/postulaciones', postulacion);
      console.log('‚úÖ Postulaci√≥n creada:', response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå Error al crear postulaci√≥n:', error.response?.data || error.message);
      throw error;
    }
  },

  // Actualizar postulaci√≥n
  async actualizarPostulacion(id, datos) {
    try {
      console.log('‚úèÔ∏è Actualizando postulaci√≥n:', id, datos);
      const response = await api.put(`/postulaciones/${id}`, datos);
      console.log('‚úÖ Postulaci√≥n actualizada:', response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå Error al actualizar postulaci√≥n:', error.response?.data || error.message);
      throw error;
    }
  },

  // Cambiar estado
  async cambiarEstado(id, estado, comentarios = '', revisadoPor = null) {
    try {
      console.log('üîÑ Cambiando estado de postulaci√≥n:', id, 'a', estado);
      const response = await api.put(`/postulaciones/${id}/estado`, { 
        estado, 
        comentarios,
        revisadoPor
      });
      console.log('‚úÖ Estado cambiado:', response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå Error al cambiar estado:', error.response?.data || error.message);
      throw error;
    }
  },

  // Calificar postulaci√≥n
  async calificar(id, calificacion, comentarios = '', revisadoPor = null) {
    try {
      console.log('‚≠ê Calificando postulaci√≥n:', id, 'con', calificacion);
      const response = await api.put(`/postulaciones/${id}/calificar`, { 
        calificacion, 
        comentarios,
        revisadoPor
      });
      console.log('‚úÖ Calificaci√≥n registrada:', response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå Error al calificar:', error.response?.data || error.message);
      throw error;
    }
  },

  // Eliminar postulaci√≥n
  async eliminar(id) {
    try {
      console.log('üóëÔ∏è Eliminando postulaci√≥n:', id);
      const response = await api.delete(`/postulaciones/${id}`);
      console.log('‚úÖ Postulaci√≥n eliminada:', response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå Error al eliminar postulaci√≥n:', error.response?.data || error.message);
      throw error;
    }
  },

  // Obtener estad√≠sticas
  async getEstadisticas(vacanteId = null) {
    try {
      console.log('üìä Obteniendo estad√≠sticas de postulaciones');
      const params = vacanteId ? `?vacanteId=${vacanteId}` : '';
      const response = await api.get(`/postulaciones/estadisticas${params}`);
      console.log('‚úÖ Estad√≠sticas obtenidas:', response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå Error al obtener estad√≠sticas:', error.response?.data || error.message);
      throw error;
    }
  }
};

export default postulacionesService;
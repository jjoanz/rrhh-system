{"ast":null,"code":"// src/context/AuthContext.jsx\n// src/context/AuthContext.jsx\nimport React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[permisos,setPermisos]=useState([]);const[loading,setLoading]=useState(true);const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// =========================\n// VERIFICAR SI TOKEN ES VÁLIDO\n// =========================\nconst isTokenValid=token=>{if(!token)return false;try{const payload=JSON.parse(atob(token.split('.')[1]));const currentTime=Date.now()/1000;// Verificar si el token ha expirado\nif(payload.exp<currentTime){console.log('Token expirado');return false;}return true;}catch(error){console.error('Token malformado:',error);return false;}};// =========================\n// MAPEO DEL ESTADO (CORREGIDO PARA SQL SERVER BIT)\n// =========================\nconst mapEstado=estado=>{// SQL Server bit: 1 = Activo, 0 = Inactivo\nreturn estado===1||estado===true?'Activo':'Inactivo';};const formatUser=userData=>({id:userData.id,name:`${userData.nombre} ${userData.apellido}`.trim()||'Usuario',position:userData.puesto||userData.rol||'',role:userData.rol||'Sistema',email:userData.email,empleadoId:userData.empleadoId,estado:mapEstado(userData.estado)});// =========================\n// LOGIN\n// =========================\nconst login=async(email,password)=>{try{const res=await axios.post(`${API_URL}/auth/login`,{email,password});const{token,user:userData,permisos:permisosData}=res.data;localStorage.setItem('rrhh_token',token);setUser(formatUser(userData));setPermisos(permisosData||[]);return{success:true};}catch(error){var _error$response,_error$response$data;console.error('Login error:',error);return{success:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Error al iniciar sesión'};}};// =========================\n// LOGOUT\n// =========================\nconst logout=()=>{localStorage.removeItem('rrhh_token');setUser(null);setPermisos([]);};// =========================\n// VERIFICAR TOKEN (CORREGIDO)\n// =========================\nconst verifyUser=async()=>{const token=localStorage.getItem('rrhh_token');if(!token){setLoading(false);return;}// Verificar si el token es válido antes de hacer la llamada\nif(!isTokenValid(token)){console.log('Token inválido o expirado, limpiando localStorage');logout();setLoading(false);return;}try{const res=await axios.get(`${API_URL}/auth/verify`,{headers:{Authorization:`Bearer ${token}`}});const{user:userData,permisos:permisosData}=res.data;setUser(formatUser(userData));setPermisos(permisosData||[]);}catch(error){var _error$response2;console.error('Verify user error:',error);// Si es error 401 (no autorizado), limpiar token\nif(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){console.log('Token rechazado por el servidor, limpiando localStorage');}logout();}finally{setLoading(false);}};// =========================\n// FORGOT PASSWORD\n// =========================\nconst forgotPassword=async email=>{try{const res=await axios.post(`${API_URL}/auth/forgot-password`,{email});return res.data;}catch(error){var _error$response3,_error$response3$data;console.error('Forgot password error:',error);return{success:false,error:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Error al enviar email'};}};// =========================\n// RESET PASSWORD\n// =========================\nconst resetPassword=async(token,newPassword)=>{try{const res=await axios.post(`${API_URL}/auth/reset-password`,{token,newPassword});return res.data;}catch(error){var _error$response4,_error$response4$data;console.error('Reset password error:',error);return{success:false,error:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Error al restablecer contraseña'};}};// =========================\n// CAMBIO DE CONTRASEÑA (USER LOGUEADO)\n// =========================\nconst changePassword=async(currentPassword,newPassword)=>{const token=localStorage.getItem('rrhh_token');if(!token||!isTokenValid(token)){return{success:false,error:'No estás autenticado o tu sesión ha expirado'};}try{const res=await axios.post(`${API_URL}/auth/change-password`,{currentPassword,newPassword},{headers:{Authorization:`Bearer ${token}`}});return res.data;}catch(error){var _error$response5,_error$response6,_error$response6$data;console.error('Change password error:',error);// Si es error 401, limpiar token\nif(((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.status)===401){logout();return{success:false,error:'Tu sesión ha expirado. Por favor, inicia sesión nuevamente.'};}return{success:false,error:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Error cambiando contraseña'};}};useEffect(()=>{verifyUser();},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,permisos,login,logout,forgotPassword,resetPassword,changePassword,loading,isTokenValid},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","permisos","setPermisos","loading","setLoading","API_URL","process","env","REACT_APP_API_URL","isTokenValid","token","payload","JSON","parse","atob","split","currentTime","Date","now","exp","console","log","error","mapEstado","estado","formatUser","userData","id","name","nombre","apellido","trim","position","puesto","rol","role","email","empleadoId","login","password","res","post","permisosData","data","localStorage","setItem","success","_error$response","_error$response$data","response","message","logout","removeItem","verifyUser","getItem","get","headers","Authorization","_error$response2","status","forgotPassword","_error$response3","_error$response3$data","resetPassword","newPassword","_error$response4","_error$response4$data","changePassword","currentPassword","_error$response5","_error$response6","_error$response6$data","Provider","value","useAuth"],"sources":["C:/Users/josemontedeoca/rrhh-system/frontend/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.jsx\r\n// src/context/AuthContext.jsx\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [permisos, setPermisos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n  // =========================\r\n  // VERIFICAR SI TOKEN ES VÁLIDO\r\n  // =========================\r\n  const isTokenValid = (token) => {\r\n    if (!token) return false;\r\n    \r\n    try {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      const currentTime = Date.now() / 1000;\r\n      \r\n      // Verificar si el token ha expirado\r\n      if (payload.exp < currentTime) {\r\n        console.log('Token expirado');\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Token malformado:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // MAPEO DEL ESTADO (CORREGIDO PARA SQL SERVER BIT)\r\n  // =========================\r\n  const mapEstado = (estado) => {\r\n    // SQL Server bit: 1 = Activo, 0 = Inactivo\r\n    return (estado === 1 || estado === true) ? 'Activo' : 'Inactivo';\r\n  };\r\n\r\n  const formatUser = (userData) => ({\r\n    id: userData.id,\r\n    name: `${userData.nombre} ${userData.apellido}`.trim() || 'Usuario',\r\n    position: userData.puesto || userData.rol || '',\r\n    role: userData.rol || 'Sistema',\r\n    email: userData.email,\r\n    empleadoId: userData.empleadoId,\r\n    estado: mapEstado(userData.estado)\r\n  });\r\n\r\n  // =========================\r\n  // LOGIN\r\n  // =========================\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await axios.post(`${API_URL}/auth/login`, { email, password });\r\n      const { token, user: userData, permisos: permisosData } = res.data;\r\n\r\n      localStorage.setItem('rrhh_token', token);\r\n\r\n      setUser(formatUser(userData));\r\n      setPermisos(permisosData || []);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Error al iniciar sesión'\r\n      };\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // LOGOUT\r\n  // =========================\r\n  const logout = () => {\r\n    localStorage.removeItem('rrhh_token');\r\n    setUser(null);\r\n    setPermisos([]);\r\n  };\r\n\r\n  // =========================\r\n  // VERIFICAR TOKEN (CORREGIDO)\r\n  // =========================\r\n  const verifyUser = async () => {\r\n    const token = localStorage.getItem('rrhh_token');\r\n    \r\n    if (!token) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Verificar si el token es válido antes de hacer la llamada\r\n    if (!isTokenValid(token)) {\r\n      console.log('Token inválido o expirado, limpiando localStorage');\r\n      logout();\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get(`${API_URL}/auth/verify`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      const { user: userData, permisos: permisosData } = res.data;\r\n\r\n      setUser(formatUser(userData));\r\n      setPermisos(permisosData || []);\r\n    } catch (error) {\r\n      console.error('Verify user error:', error);\r\n      \r\n      // Si es error 401 (no autorizado), limpiar token\r\n      if (error.response?.status === 401) {\r\n        console.log('Token rechazado por el servidor, limpiando localStorage');\r\n      }\r\n      \r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // FORGOT PASSWORD\r\n  // =========================\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      const res = await axios.post(`${API_URL}/auth/forgot-password`, { email });\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error('Forgot password error:', error);\r\n      return { success: false, error: error.response?.data?.message || 'Error al enviar email' };\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // RESET PASSWORD\r\n  // =========================\r\n  const resetPassword = async (token, newPassword) => {\r\n    try {\r\n      const res = await axios.post(`${API_URL}/auth/reset-password`, { token, newPassword });\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error('Reset password error:', error);\r\n      return { success: false, error: error.response?.data?.message || 'Error al restablecer contraseña' };\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // CAMBIO DE CONTRASEÑA (USER LOGUEADO)\r\n  // =========================\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    const token = localStorage.getItem('rrhh_token');\r\n    \r\n    if (!token || !isTokenValid(token)) {\r\n      return { success: false, error: 'No estás autenticado o tu sesión ha expirado' };\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${API_URL}/auth/change-password`,\r\n        { currentPassword, newPassword },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error('Change password error:', error);\r\n      \r\n      // Si es error 401, limpiar token\r\n      if (error.response?.status === 401) {\r\n        logout();\r\n        return { success: false, error: 'Tu sesión ha expirado. Por favor, inicia sesión nuevamente.' };\r\n      }\r\n      \r\n      return { success: false, error: error.response?.data?.message || 'Error cambiando contraseña' };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    verifyUser();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        permisos,\r\n        login,\r\n        logout,\r\n        forgotPassword,\r\n        resetPassword,\r\n        changePassword,\r\n        loading,\r\n        isTokenValid\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
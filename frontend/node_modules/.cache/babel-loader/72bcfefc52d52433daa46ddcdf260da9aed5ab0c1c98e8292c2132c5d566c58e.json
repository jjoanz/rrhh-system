{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josemontedeoca\\\\rrhh-system\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [permisos, setPermisos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const API_URL = process.env.REACT_APP_API_URL || 'http://192.168.0.239:5000/api';\n  const isTokenValid = token => {\n    if (!token) return false;\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      const currentTime = Date.now() / 1000;\n      return payload.exp > currentTime;\n    } catch (error) {\n      console.error('Token malformado:', error);\n      return false;\n    }\n  };\n  const mapEstado = estado => estado === 1 || estado === true ? 'Activo' : 'Inactivo';\n  const formatUser = userData => ({\n    id: userData.id,\n    name: `${userData.nombre} ${userData.apellido}`.trim() || 'Usuario',\n    position: userData.puesto || userData.rol || '',\n    role: userData.rol || 'Sistema',\n    email: userData.email,\n    empleadoId: userData.empleadoId,\n    estado: mapEstado(userData.estado)\n  });\n  const login = async (email, password) => {\n    try {\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!res.ok) {\n        const errData = await res.json();\n        throw new Error(errData.message || 'Error al iniciar sesión');\n      }\n      const data = await res.json();\n      localStorage.setItem('rrhh_token', data.token);\n      setUser(formatUser(data.user));\n      setPermisos(data.permisos || []);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('rrhh_token');\n    setUser(null);\n    setPermisos([]);\n  };\n  const verifyUser = async () => {\n    const token = localStorage.getItem('rrhh_token');\n    if (!token || !isTokenValid(token)) {\n      logout();\n      setLoading(false);\n      return;\n    }\n    try {\n      const res = await fetch(`${API_URL}/auth/verify`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!res.ok) {\n        if (res.status === 401) logout();\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      const data = await res.json();\n      setUser(formatUser(data.user));\n      setPermisos(data.permisos || []);\n    } catch (error) {\n      console.error('Verify user error:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const forgotPassword = async email => {\n    try {\n      const res = await fetch(`${API_URL}/auth/forgot-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!res.ok) {\n        const errData = await res.json();\n        throw new Error(errData.message || 'Error al enviar email');\n      }\n      return await res.json();\n    } catch (error) {\n      console.error('Forgot password error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const resetPassword = async (token, newPassword) => {\n    try {\n      const res = await fetch(`${API_URL}/auth/reset-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          newPassword\n        })\n      });\n      if (!res.ok) {\n        const errData = await res.json();\n        throw new Error(errData.message || 'Error al restablecer contraseña');\n      }\n      return await res.json();\n    } catch (error) {\n      console.error('Reset password error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    const token = localStorage.getItem('rrhh_token');\n    if (!token || !isTokenValid(token)) return {\n      success: false,\n      error: 'No estás autenticado'\n    };\n    try {\n      const res = await fetch(`${API_URL}/auth/change-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          currentPassword,\n          newPassword\n        })\n      });\n      if (!res.ok) {\n        if (res.status === 401) logout();\n        const errData = await res.json();\n        throw new Error(errData.message || 'Error cambiando contraseña');\n      }\n      return await res.json();\n    } catch (error) {\n      console.error('Change password error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  useEffect(() => {\n    verifyUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      permisos,\n      login,\n      logout,\n      forgotPassword,\n      resetPassword,\n      changePassword,\n      loading,\n      isTokenValid\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PW+D/0JtsO+/Fpq7WTPIrDkqrA8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","permisos","setPermisos","loading","setLoading","API_URL","process","env","REACT_APP_API_URL","isTokenValid","token","payload","JSON","parse","atob","split","currentTime","Date","now","exp","error","console","mapEstado","estado","formatUser","userData","id","name","nombre","apellido","trim","position","puesto","rol","role","email","empleadoId","login","password","res","fetch","method","headers","body","stringify","ok","errData","json","Error","message","data","localStorage","setItem","success","logout","removeItem","verifyUser","getItem","Authorization","status","forgotPassword","resetPassword","newPassword","changePassword","currentPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/josemontedeoca/rrhh-system/frontend/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.jsx\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [permisos, setPermisos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://192.168.0.239:5000/api';\r\n\r\n  const isTokenValid = (token) => {\r\n    if (!token) return false;\r\n    try {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      const currentTime = Date.now() / 1000;\r\n      return payload.exp > currentTime;\r\n    } catch (error) {\r\n      console.error('Token malformado:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const mapEstado = (estado) => (estado === 1 || estado === true ? 'Activo' : 'Inactivo');\r\n\r\n  const formatUser = (userData) => ({\r\n    id: userData.id,\r\n    name: `${userData.nombre} ${userData.apellido}`.trim() || 'Usuario',\r\n    position: userData.puesto || userData.rol || '',\r\n    role: userData.rol || 'Sistema',\r\n    email: userData.email,\r\n    empleadoId: userData.empleadoId,\r\n    estado: mapEstado(userData.estado),\r\n  });\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errData = await res.json();\r\n        throw new Error(errData.message || 'Error al iniciar sesión');\r\n      }\r\n\r\n      const data = await res.json();\r\n      localStorage.setItem('rrhh_token', data.token);\r\n      setUser(formatUser(data.user));\r\n      setPermisos(data.permisos || []);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('rrhh_token');\r\n    setUser(null);\r\n    setPermisos([]);\r\n  };\r\n\r\n  const verifyUser = async () => {\r\n    const token = localStorage.getItem('rrhh_token');\r\n    if (!token || !isTokenValid(token)) {\r\n      logout();\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(`${API_URL}/auth/verify`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (!res.ok) {\r\n        if (res.status === 401) logout();\r\n        throw new Error(`HTTP error ${res.status}`);\r\n      }\r\n\r\n      const data = await res.json();\r\n      setUser(formatUser(data.user));\r\n      setPermisos(data.permisos || []);\r\n    } catch (error) {\r\n      console.error('Verify user error:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      const res = await fetch(`${API_URL}/auth/forgot-password`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errData = await res.json();\r\n        throw new Error(errData.message || 'Error al enviar email');\r\n      }\r\n\r\n      return await res.json();\r\n    } catch (error) {\r\n      console.error('Forgot password error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (token, newPassword) => {\r\n    try {\r\n      const res = await fetch(`${API_URL}/auth/reset-password`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ token, newPassword }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errData = await res.json();\r\n        throw new Error(errData.message || 'Error al restablecer contraseña');\r\n      }\r\n\r\n      return await res.json();\r\n    } catch (error) {\r\n      console.error('Reset password error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    const token = localStorage.getItem('rrhh_token');\r\n    if (!token || !isTokenValid(token)) return { success: false, error: 'No estás autenticado' };\r\n\r\n    try {\r\n      const res = await fetch(`${API_URL}/auth/change-password`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },\r\n        body: JSON.stringify({ currentPassword, newPassword }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        if (res.status === 401) logout();\r\n        const errData = await res.json();\r\n        throw new Error(errData.message || 'Error cambiando contraseña');\r\n      }\r\n\r\n      return await res.json();\r\n    } catch (error) {\r\n      console.error('Change password error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    verifyUser();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        permisos,\r\n        login,\r\n        logout,\r\n        forgotPassword,\r\n        resetPassword,\r\n        changePassword,\r\n        loading,\r\n        isTokenValid,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
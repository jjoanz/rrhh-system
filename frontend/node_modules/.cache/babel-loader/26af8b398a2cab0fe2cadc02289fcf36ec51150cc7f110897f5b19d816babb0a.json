{"ast":null,"code":"// src/api/vacantesService.js\nimport api from './api';\nconst vacantesService = {\n  // ===============================\n  // VACANTES\n  // ===============================\n\n  // Obtener todas las vacantes activas\n  async getVacantesActivas() {\n    try {\n      console.log('Obteniendo vacantes activas...');\n      const response = await api.get('/vacantes');\n      console.log('Vacantes obtenidas:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      console.error('Error al obtener vacantes:', (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    }\n  },\n  // Crear nueva vacante\n  async crearVacante(vacante) {\n    try {\n      console.log('Creando vacante:', vacante);\n      const response = await api.post('/vacantes', vacante);\n      console.log('Vacante creada:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      console.error('Error al crear vacante:', (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw error;\n    }\n  },\n  // Buscar vacantes con filtros\n  async buscarVacantes(filtros) {\n    try {\n      console.log('Buscando vacantes con filtros:', filtros);\n      const params = new URLSearchParams();\n      Object.keys(filtros).forEach(key => {\n        if (filtros[key] !== '' && filtros[key] !== null && filtros[key] !== undefined) {\n          params.append(key, filtros[key]);\n        }\n      });\n      const response = await api.get(`/vacantes/buscar?${params.toString()}`);\n      console.log('Búsqueda completada:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      console.error('Error al buscar vacantes:', (error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      throw error;\n    }\n  },\n  // Obtener vacante por ID\n  async getVacantePorId(id) {\n    try {\n      console.log('Obteniendo vacante por ID:', id);\n      const response = await api.get(`/vacantes/${id}`);\n      console.log('Vacante obtenida:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      console.error('Error al obtener vacante por ID:', (error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      throw error;\n    }\n  },\n  // Actualizar vacante\n  async actualizarVacante(id, datos) {\n    try {\n      console.log('Actualizando vacante:', id, datos);\n      const response = await api.put(`/vacantes/${id}`, datos);\n      console.log('Vacante actualizada:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      console.error('Error al actualizar vacante:', (error === null || error === void 0 ? void 0 : (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      throw error;\n    }\n  },\n  // Cerrar vacante\n  async cerrarVacante(id, motivo) {\n    try {\n      console.log('Cerrando vacante:', id, motivo);\n      const response = await api.put(`/vacantes/${id}/cerrar`, {\n        motivo\n      });\n      console.log('Vacante cerrada:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      console.error('Error al cerrar vacante:', (error === null || error === void 0 ? void 0 : (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      throw error;\n    }\n  },\n  // ===============================\n  // SOLICITUDES\n  // ===============================\n\n  async getSolicitudes(usuarioID, rol) {\n    try {\n      console.log('Obteniendo solicitudes para usuario:', usuarioID, 'rol:', rol);\n      const params = new URLSearchParams();\n      if (usuarioID) params.append('usuarioID', usuarioID);\n      if (rol) params.append('rol', rol);\n      const response = await api.get(`/vacantes/solicitudes?${params.toString()}`);\n      console.log('Solicitudes obtenidas:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response7;\n      console.error('Error al obtener solicitudes:', (error === null || error === void 0 ? void 0 : (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      throw error;\n    }\n  },\n  async crearSolicitud(solicitud) {\n    try {\n      console.log('Creando solicitud:', solicitud);\n      const response = await api.post('/vacantes/solicitudes', solicitud);\n      console.log('Solicitud creada:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response8;\n      console.error('Error al crear solicitud:', (error === null || error === void 0 ? void 0 : (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n      throw error;\n    }\n  },\n  async aprobarSolicitud(solicitudId, comentarios = '') {\n    try {\n      console.log('Aprobando solicitud:', solicitudId, comentarios);\n      const response = await api.put(`/vacantes/solicitudes/${solicitudId}/aprobar`, {\n        comentarios\n      });\n      console.log('Solicitud aprobada:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response9;\n      console.error('Error al aprobar solicitud:', (error === null || error === void 0 ? void 0 : (_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n      throw error;\n    }\n  },\n  async rechazarSolicitud(solicitudId, comentarios = '') {\n    try {\n      console.log('Rechazando solicitud:', solicitudId, comentarios);\n      const response = await api.put(`/vacantes/solicitudes/${solicitudId}/rechazar`, {\n        comentarios\n      });\n      console.log('Solicitud rechazada:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response0;\n      console.error('Error al rechazar solicitud:', (error === null || error === void 0 ? void 0 : (_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n      throw error;\n    }\n  },\n  async getSolicitudPorId(id) {\n    try {\n      console.log('Obteniendo solicitud por ID:', id);\n      const response = await api.get(`/vacantes/solicitudes/${id}`);\n      console.log('Solicitud obtenida:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response1;\n      console.error('Error al obtener solicitud por ID:', (error === null || error === void 0 ? void 0 : (_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message);\n      throw error;\n    }\n  },\n  async actualizarSolicitud(id, datos) {\n    try {\n      console.log('Actualizando solicitud:', id, datos);\n      const response = await api.put(`/vacantes/solicitudes/${id}`, datos);\n      console.log('Solicitud actualizada:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response10;\n      console.error('Error al actualizar solicitud:', (error === null || error === void 0 ? void 0 : (_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message);\n      throw error;\n    }\n  },\n  // ===============================\n  // POSTULACIONES\n  // ===============================\n\n  async getPostulaciones(usuarioID, rol) {\n    try {\n      console.log('Obteniendo postulaciones para usuario:', usuarioID, 'rol:', rol);\n      const params = new URLSearchParams();\n      if (usuarioID) params.append('usuarioID', usuarioID);\n      if (rol) params.append('rol', rol);\n      const response = await api.get(`/vacantes/postulaciones?${params.toString()}`);\n      console.log('Postulaciones obtenidas:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response11;\n      console.error('Error al obtener postulaciones:', (error === null || error === void 0 ? void 0 : (_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      throw error;\n    }\n  },\n  async crearPostulacion(postulacion) {\n    try {\n      console.log('Creando postulación:', postulacion);\n      const response = await api.post('/vacantes/postulaciones', postulacion);\n      console.log('Postulación creada:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response12;\n      console.error('Error al crear postulación:', (error === null || error === void 0 ? void 0 : (_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : _error$response12.data) || error.message);\n      throw error;\n    }\n  },\n  async cambiarEstadoPostulacion(postulacionId, estado, comentarios = '') {\n    try {\n      console.log('Cambiando estado de postulación:', postulacionId, 'a', estado);\n      const response = await api.put(`/vacantes/postulaciones/${postulacionId}/estado`, {\n        estado,\n        comentarios\n      });\n      console.log('Estado cambiado:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response13;\n      console.error('Error al cambiar estado de postulación:', (error === null || error === void 0 ? void 0 : (_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n      throw error;\n    }\n  },\n  async getPostulacionPorId(id) {\n    try {\n      console.log('Obteniendo postulación por ID:', id);\n      const response = await api.get(`/vacantes/postulaciones/${id}`);\n      console.log('Postulación obtenida:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response14;\n      console.error('Error al obtener postulación por ID:', (error === null || error === void 0 ? void 0 : (_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.data) || error.message);\n      throw error;\n    }\n  },\n  async getPostulacionesPorVacante(vacanteId) {\n    try {\n      console.log('Obteniendo postulaciones para vacante:', vacanteId);\n      const response = await api.get(`/vacantes/${vacanteId}/postulaciones`);\n      console.log('Postulaciones de vacante obtenidas:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response15;\n      console.error('Error al obtener postulaciones por vacante:', (error === null || error === void 0 ? void 0 : (_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data) || error.message);\n      throw error;\n    }\n  },\n  // ===============================\n  // ESTADÍSTICAS Y REPORTES\n  // ===============================\n\n  async getEstadisticas() {\n    try {\n      console.log('Obteniendo estadísticas...');\n      const response = await api.get('/vacantes/estadisticas');\n      console.log('Estadísticas obtenidas:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response16;\n      console.error('Error al obtener estadísticas:', (error === null || error === void 0 ? void 0 : (_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : _error$response16.data) || error.message);\n      throw error;\n    }\n  },\n  async getReportesResumen() {\n    try {\n      console.log('Obteniendo resumen de reportes...');\n      const response = await api.get('/vacantes/reportes/resumen');\n      console.log('Resumen de reportes obtenido:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response17;\n      console.error('Error al obtener resumen de reportes:', (error === null || error === void 0 ? void 0 : (_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : _error$response17.data) || error.message);\n      throw error;\n    }\n  },\n  async exportarReporte(formato, tipo) {\n    try {\n      console.log('Exportando reporte:', formato, tipo);\n      const response = await api.post('/vacantes/reportes/exportar', {\n        formato,\n        tipo\n      });\n      console.log('Reporte exportado:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response18;\n      console.error('Error al exportar reporte:', (error === null || error === void 0 ? void 0 : (_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : _error$response18.data) || error.message);\n      throw error;\n    }\n  },\n  async getMetricasAvanzadas() {\n    try {\n      console.log('Obteniendo métricas avanzadas...');\n      const response = await api.get('/vacantes/metricas');\n      console.log('Métricas avanzadas obtenidas:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response19;\n      console.error('Error al obtener métricas avanzadas:', (error === null || error === void 0 ? void 0 : (_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : _error$response19.data) || error.message);\n      throw error;\n    }\n  },\n  async getReportePorTipo(tipo, parametros = {}) {\n    try {\n      console.log('Obteniendo reporte por tipo:', tipo, parametros);\n      const params = new URLSearchParams();\n      Object.keys(parametros).forEach(key => {\n        if (parametros[key] !== '' && parametros[key] !== null && parametros[key] !== undefined) {\n          params.append(key, parametros[key]);\n        }\n      });\n      const response = await api.get(`/vacantes/reportes/${tipo}?${params.toString()}`);\n      console.log('Reporte obtenido:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response20;\n      console.error('Error al obtener reporte por tipo:', (error === null || error === void 0 ? void 0 : (_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : _error$response20.data) || error.message);\n      throw error;\n    }\n  },\n  // ===============================\n  // DATOS AUXILIARES\n  // ===============================\n\n  async getDepartamentos() {\n    try {\n      console.log('Obteniendo departamentos...');\n      const response = await api.get('/vacantes/departamentos');\n      console.log('Departamentos obtenidos:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response21;\n      console.error('Error al obtener departamentos:', (error === null || error === void 0 ? void 0 : (_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : _error$response21.data) || error.message);\n      throw error;\n    }\n  },\n  async getUsuarios() {\n    try {\n      console.log('Obteniendo usuarios...');\n      const response = await api.get('/vacantes/usuarios');\n      console.log('Usuarios obtenidos:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response22;\n      console.error('Error al obtener usuarios:', (error === null || error === void 0 ? void 0 : (_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : _error$response22.data) || error.message);\n      throw error;\n    }\n  },\n  async getRoles() {\n    try {\n      console.log('Obteniendo roles...');\n      const response = await api.get('/vacantes/roles');\n      console.log('Roles obtenidos:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response23;\n      console.error('Error al obtener roles:', (error === null || error === void 0 ? void 0 : (_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : _error$response23.data) || error.message);\n      throw error;\n    }\n  },\n  async getConfiguracion() {\n    try {\n      console.log('Obteniendo configuración...');\n      const response = await api.get('/vacantes/configuracion');\n      console.log('Configuración obtenida:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response24;\n      console.error('Error al obtener configuración:', (error === null || error === void 0 ? void 0 : (_error$response24 = error.response) === null || _error$response24 === void 0 ? void 0 : _error$response24.data) || error.message);\n      throw error;\n    }\n  },\n  // ===============================\n  // UTILIDADES Y TESTING\n  // ===============================\n\n  async testConexion() {\n    try {\n      console.log('Probando conexión con la API...');\n      const response = await api.get('/vacantes/health');\n      console.log('Conexión exitosa:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response25;\n      console.error('Error de conexión:', (error === null || error === void 0 ? void 0 : (_error$response25 = error.response) === null || _error$response25 === void 0 ? void 0 : _error$response25.data) || error.message);\n      throw error;\n    }\n  },\n  async getVersion() {\n    try {\n      console.log('Obteniendo versión de la API...');\n      const response = await api.get('/vacantes/version');\n      console.log('Versión obtenida:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response26;\n      console.error('Error al obtener versión:', (error === null || error === void 0 ? void 0 : (_error$response26 = error.response) === null || _error$response26 === void 0 ? void 0 : _error$response26.data) || error.message);\n      throw error;\n    }\n  },\n  // ===============================\n  // NOTIFICACIONES\n  // ===============================\n\n  async getNotificaciones(usuarioID) {\n    try {\n      console.log('Obteniendo notificaciones para usuario:', usuarioID);\n      const response = await api.get(`/vacantes/notificaciones?usuarioID=${usuarioID}`);\n      console.log('Notificaciones obtenidas:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response27;\n      console.error('Error al obtener notificaciones:', (error === null || error === void 0 ? void 0 : (_error$response27 = error.response) === null || _error$response27 === void 0 ? void 0 : _error$response27.data) || error.message);\n      throw error;\n    }\n  },\n  async marcarNotificacionLeida(notificacionId) {\n    try {\n      console.log('Marcando notificación como leída:', notificacionId);\n      const response = await api.put(`/vacantes/notificaciones/${notificacionId}/leida`);\n      console.log('Notificación marcada como leída:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response28;\n      console.error('Error al marcar notificación como leída:', (error === null || error === void 0 ? void 0 : (_error$response28 = error.response) === null || _error$response28 === void 0 ? void 0 : _error$response28.data) || error.message);\n      throw error;\n    }\n  },\n  // ===============================\n  // ARCHIVOS Y DOCUMENTOS\n  // ===============================\n\n  async subirArchivo(archivo, tipo = 'documento') {\n    try {\n      console.log('Subiendo archivo:', archivo.name, 'tipo:', tipo);\n      const formData = new FormData();\n      formData.append('archivo', archivo);\n      formData.append('tipo', tipo);\n      const response = await api.post('/vacantes/archivos', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Archivo subido:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response29;\n      console.error('Error al subir archivo:', (error === null || error === void 0 ? void 0 : (_error$response29 = error.response) === null || _error$response29 === void 0 ? void 0 : _error$response29.data) || error.message);\n      throw error;\n    }\n  },\n  async descargarArchivo(archivoId) {\n    try {\n      console.log('Descargando archivo:', archivoId);\n      const response = await api.get(`/vacantes/archivos/${archivoId}`, {\n        responseType: 'blob'\n      });\n      console.log('Archivo descargado');\n      return response.data;\n    } catch (error) {\n      var _error$response30;\n      console.error('Error al descargar archivo:', (error === null || error === void 0 ? void 0 : (_error$response30 = error.response) === null || _error$response30 === void 0 ? void 0 : _error$response30.data) || error.message);\n      throw error;\n    }\n  },\n  async eliminarArchivo(archivoId) {\n    try {\n      console.log('Eliminando archivo:', archivoId);\n      const response = await api.delete(`/vacantes/archivos/${archivoId}`);\n      console.log('Archivo eliminado:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response31;\n      console.error('Error al eliminar archivo:', (error === null || error === void 0 ? void 0 : (_error$response31 = error.response) === null || _error$response31 === void 0 ? void 0 : _error$response31.data) || error.message);\n      throw error;\n    }\n  }\n};\nexport default vacantesService;","map":{"version":3,"names":["api","vacantesService","getVacantesActivas","console","log","response","get","data","error","_error$response","message","crearVacante","vacante","post","_error$response2","buscarVacantes","filtros","params","URLSearchParams","Object","keys","forEach","key","undefined","append","toString","_error$response3","getVacantePorId","id","_error$response4","actualizarVacante","datos","put","_error$response5","cerrarVacante","motivo","_error$response6","getSolicitudes","usuarioID","rol","_error$response7","crearSolicitud","solicitud","_error$response8","aprobarSolicitud","solicitudId","comentarios","_error$response9","rechazarSolicitud","_error$response0","getSolicitudPorId","_error$response1","actualizarSolicitud","_error$response10","getPostulaciones","_error$response11","crearPostulacion","postulacion","_error$response12","cambiarEstadoPostulacion","postulacionId","estado","_error$response13","getPostulacionPorId","_error$response14","getPostulacionesPorVacante","vacanteId","_error$response15","getEstadisticas","_error$response16","getReportesResumen","_error$response17","exportarReporte","formato","tipo","_error$response18","getMetricasAvanzadas","_error$response19","getReportePorTipo","parametros","_error$response20","getDepartamentos","_error$response21","getUsuarios","_error$response22","getRoles","_error$response23","getConfiguracion","_error$response24","testConexion","_error$response25","getVersion","_error$response26","getNotificaciones","_error$response27","marcarNotificacionLeida","notificacionId","_error$response28","subirArchivo","archivo","name","formData","FormData","headers","_error$response29","descargarArchivo","archivoId","responseType","_error$response30","eliminarArchivo","delete","_error$response31"],"sources":["C:/Users/josemontedeoca/rrhh-system/frontend/src/api/vacantesService.js"],"sourcesContent":["// src/api/vacantesService.js\r\nimport api from './api';\r\n\r\nconst vacantesService = {\r\n  // ===============================\r\n  // VACANTES\r\n  // ===============================\r\n  \r\n  // Obtener todas las vacantes activas\r\n  async getVacantesActivas() {\r\n    try {\r\n      console.log('Obteniendo vacantes activas...');\r\n      const response = await api.get('/vacantes');\r\n      console.log('Vacantes obtenidas:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener vacantes:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Crear nueva vacante\r\n  async crearVacante(vacante) {\r\n    try {\r\n      console.log('Creando vacante:', vacante);\r\n      const response = await api.post('/vacantes', vacante);\r\n      console.log('Vacante creada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear vacante:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Buscar vacantes con filtros\r\n  async buscarVacantes(filtros) {\r\n    try {\r\n      console.log('Buscando vacantes con filtros:', filtros);\r\n      const params = new URLSearchParams();\r\n      Object.keys(filtros).forEach(key => {\r\n        if (filtros[key] !== '' && filtros[key] !== null && filtros[key] !== undefined) {\r\n          params.append(key, filtros[key]);\r\n        }\r\n      });\r\n      const response = await api.get(`/vacantes/buscar?${params.toString()}`);\r\n      console.log('Búsqueda completada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al buscar vacantes:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener vacante por ID\r\n  async getVacantePorId(id) {\r\n    try {\r\n      console.log('Obteniendo vacante por ID:', id);\r\n      const response = await api.get(`/vacantes/${id}`);\r\n      console.log('Vacante obtenida:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener vacante por ID:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Actualizar vacante\r\n  async actualizarVacante(id, datos) {\r\n    try {\r\n      console.log('Actualizando vacante:', id, datos);\r\n      const response = await api.put(`/vacantes/${id}`, datos);\r\n      console.log('Vacante actualizada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al actualizar vacante:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Cerrar vacante\r\n  async cerrarVacante(id, motivo) {\r\n    try {\r\n      console.log('Cerrando vacante:', id, motivo);\r\n      const response = await api.put(`/vacantes/${id}/cerrar`, { motivo });\r\n      console.log('Vacante cerrada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al cerrar vacante:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // ===============================\r\n  // SOLICITUDES\r\n  // ===============================\r\n  \r\n  async getSolicitudes(usuarioID, rol) {\r\n    try {\r\n      console.log('Obteniendo solicitudes para usuario:', usuarioID, 'rol:', rol);\r\n      const params = new URLSearchParams();\r\n      if (usuarioID) params.append('usuarioID', usuarioID);\r\n      if (rol) params.append('rol', rol);\r\n      const response = await api.get(`/vacantes/solicitudes?${params.toString()}`);\r\n      console.log('Solicitudes obtenidas:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener solicitudes:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async crearSolicitud(solicitud) {\r\n    try {\r\n      console.log('Creando solicitud:', solicitud);\r\n      const response = await api.post('/vacantes/solicitudes', solicitud);\r\n      console.log('Solicitud creada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear solicitud:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async aprobarSolicitud(solicitudId, comentarios = '') {\r\n    try {\r\n      console.log('Aprobando solicitud:', solicitudId, comentarios);\r\n      const response = await api.put(`/vacantes/solicitudes/${solicitudId}/aprobar`, { comentarios });\r\n      console.log('Solicitud aprobada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al aprobar solicitud:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async rechazarSolicitud(solicitudId, comentarios = '') {\r\n    try {\r\n      console.log('Rechazando solicitud:', solicitudId, comentarios);\r\n      const response = await api.put(`/vacantes/solicitudes/${solicitudId}/rechazar`, { comentarios });\r\n      console.log('Solicitud rechazada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al rechazar solicitud:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getSolicitudPorId(id) {\r\n    try {\r\n      console.log('Obteniendo solicitud por ID:', id);\r\n      const response = await api.get(`/vacantes/solicitudes/${id}`);\r\n      console.log('Solicitud obtenida:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener solicitud por ID:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async actualizarSolicitud(id, datos) {\r\n    try {\r\n      console.log('Actualizando solicitud:', id, datos);\r\n      const response = await api.put(`/vacantes/solicitudes/${id}`, datos);\r\n      console.log('Solicitud actualizada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al actualizar solicitud:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // ===============================\r\n  // POSTULACIONES\r\n  // ===============================\r\n  \r\n  async getPostulaciones(usuarioID, rol) {\r\n    try {\r\n      console.log('Obteniendo postulaciones para usuario:', usuarioID, 'rol:', rol);\r\n      const params = new URLSearchParams();\r\n      if (usuarioID) params.append('usuarioID', usuarioID);\r\n      if (rol) params.append('rol', rol);\r\n      const response = await api.get(`/vacantes/postulaciones?${params.toString()}`);\r\n      console.log('Postulaciones obtenidas:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener postulaciones:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async crearPostulacion(postulacion) {\r\n    try {\r\n      console.log('Creando postulación:', postulacion);\r\n      const response = await api.post('/vacantes/postulaciones', postulacion);\r\n      console.log('Postulación creada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear postulación:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async cambiarEstadoPostulacion(postulacionId, estado, comentarios = '') {\r\n    try {\r\n      console.log('Cambiando estado de postulación:', postulacionId, 'a', estado);\r\n      const response = await api.put(`/vacantes/postulaciones/${postulacionId}/estado`, { estado, comentarios });\r\n      console.log('Estado cambiado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al cambiar estado de postulación:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getPostulacionPorId(id) {\r\n    try {\r\n      console.log('Obteniendo postulación por ID:', id);\r\n      const response = await api.get(`/vacantes/postulaciones/${id}`);\r\n      console.log('Postulación obtenida:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener postulación por ID:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getPostulacionesPorVacante(vacanteId) {\r\n    try {\r\n      console.log('Obteniendo postulaciones para vacante:', vacanteId);\r\n      const response = await api.get(`/vacantes/${vacanteId}/postulaciones`);\r\n      console.log('Postulaciones de vacante obtenidas:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener postulaciones por vacante:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // ===============================\r\n  // ESTADÍSTICAS Y REPORTES\r\n  // ===============================\r\n  \r\n  async getEstadisticas() {\r\n    try {\r\n      console.log('Obteniendo estadísticas...');\r\n      const response = await api.get('/vacantes/estadisticas');\r\n      console.log('Estadísticas obtenidas:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener estadísticas:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getReportesResumen() {\r\n    try {\r\n      console.log('Obteniendo resumen de reportes...');\r\n      const response = await api.get('/vacantes/reportes/resumen');\r\n      console.log('Resumen de reportes obtenido:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener resumen de reportes:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async exportarReporte(formato, tipo) {\r\n    try {\r\n      console.log('Exportando reporte:', formato, tipo);\r\n      const response = await api.post('/vacantes/reportes/exportar', { formato, tipo });\r\n      console.log('Reporte exportado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al exportar reporte:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getMetricasAvanzadas() {\r\n    try {\r\n      console.log('Obteniendo métricas avanzadas...');\r\n      const response = await api.get('/vacantes/metricas');\r\n      console.log('Métricas avanzadas obtenidas:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener métricas avanzadas:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getReportePorTipo(tipo, parametros = {}) {\r\n    try {\r\n      console.log('Obteniendo reporte por tipo:', tipo, parametros);\r\n      const params = new URLSearchParams();\r\n      Object.keys(parametros).forEach(key => {\r\n        if (parametros[key] !== '' && parametros[key] !== null && parametros[key] !== undefined) {\r\n          params.append(key, parametros[key]);\r\n        }\r\n      });\r\n      const response = await api.get(`/vacantes/reportes/${tipo}?${params.toString()}`);\r\n      console.log('Reporte obtenido:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener reporte por tipo:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // ===============================\r\n  // DATOS AUXILIARES\r\n  // ===============================\r\n  \r\n  async getDepartamentos() {\r\n    try {\r\n      console.log('Obteniendo departamentos...');\r\n      const response = await api.get('/vacantes/departamentos');\r\n      console.log('Departamentos obtenidos:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener departamentos:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getUsuarios() {\r\n    try {\r\n      console.log('Obteniendo usuarios...');\r\n      const response = await api.get('/vacantes/usuarios');\r\n      console.log('Usuarios obtenidos:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener usuarios:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getRoles() {\r\n    try {\r\n      console.log('Obteniendo roles...');\r\n      const response = await api.get('/vacantes/roles');\r\n      console.log('Roles obtenidos:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener roles:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getConfiguracion() {\r\n    try {\r\n      console.log('Obteniendo configuración...');\r\n      const response = await api.get('/vacantes/configuracion');\r\n      console.log('Configuración obtenida:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener configuración:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // ===============================\r\n  // UTILIDADES Y TESTING\r\n  // ===============================\r\n\r\n  async testConexion() {\r\n    try {\r\n      console.log('Probando conexión con la API...');\r\n      const response = await api.get('/vacantes/health');\r\n      console.log('Conexión exitosa:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error de conexión:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getVersion() {\r\n    try {\r\n      console.log('Obteniendo versión de la API...');\r\n      const response = await api.get('/vacantes/version');\r\n      console.log('Versión obtenida:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener versión:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // ===============================\r\n  // NOTIFICACIONES\r\n  // ===============================\r\n\r\n  async getNotificaciones(usuarioID) {\r\n    try {\r\n      console.log('Obteniendo notificaciones para usuario:', usuarioID);\r\n      const response = await api.get(`/vacantes/notificaciones?usuarioID=${usuarioID}`);\r\n      console.log('Notificaciones obtenidas:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener notificaciones:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async marcarNotificacionLeida(notificacionId) {\r\n    try {\r\n      console.log('Marcando notificación como leída:', notificacionId);\r\n      const response = await api.put(`/vacantes/notificaciones/${notificacionId}/leida`);\r\n      console.log('Notificación marcada como leída:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al marcar notificación como leída:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // ===============================\r\n  // ARCHIVOS Y DOCUMENTOS\r\n  // ===============================\r\n\r\n  async subirArchivo(archivo, tipo = 'documento') {\r\n    try {\r\n      console.log('Subiendo archivo:', archivo.name, 'tipo:', tipo);\r\n      const formData = new FormData();\r\n      formData.append('archivo', archivo);\r\n      formData.append('tipo', tipo);\r\n      \r\n      const response = await api.post('/vacantes/archivos', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log('Archivo subido:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al subir archivo:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async descargarArchivo(archivoId) {\r\n    try {\r\n      console.log('Descargando archivo:', archivoId);\r\n      const response = await api.get(`/vacantes/archivos/${archivoId}`, {\r\n        responseType: 'blob',\r\n      });\r\n      console.log('Archivo descargado');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al descargar archivo:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async eliminarArchivo(archivoId) {\r\n    try {\r\n      console.log('Eliminando archivo:', archivoId);\r\n      const response = await api.delete(`/vacantes/archivos/${archivoId}`);\r\n      console.log('Archivo eliminado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al eliminar archivo:', error?.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default vacantesService;"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,eAAe,GAAG;EACtB;EACA;EACA;;EAEA;EACA,MAAMC,kBAAkBA,CAAA,EAAG;IACzB,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,WAAW,CAAC;MAC3CH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACjD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdN,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEH,QAAQ,cAAAI,eAAA,uBAAfA,eAAA,CAAiBF,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACnF,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMG,YAAYA,CAACC,OAAO,EAAE;IAC1B,IAAI;MACFT,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEQ,OAAO,CAAC;MACxC,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACa,IAAI,CAAC,WAAW,EAAED,OAAO,CAAC;MACrDT,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC7C,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAM,gBAAA;MACdX,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAM,gBAAA,GAALN,KAAK,CAAEH,QAAQ,cAAAS,gBAAA,uBAAfA,gBAAA,CAAiBP,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAChF,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMO,cAAcA,CAACC,OAAO,EAAE;IAC5B,IAAI;MACFb,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEY,OAAO,CAAC;MACtD,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;MACpCC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;QAClC,IAAIN,OAAO,CAACM,GAAG,CAAC,KAAK,EAAE,IAAIN,OAAO,CAACM,GAAG,CAAC,KAAK,IAAI,IAAIN,OAAO,CAACM,GAAG,CAAC,KAAKC,SAAS,EAAE;UAC9EN,MAAM,CAACO,MAAM,CAACF,GAAG,EAAEN,OAAO,CAACM,GAAG,CAAC,CAAC;QAClC;MACF,CAAC,CAAC;MACF,MAAMjB,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,oBAAoBW,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC;MACvEtB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAClD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAkB,gBAAA;MACdvB,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAkB,gBAAA,GAALlB,KAAK,CAAEH,QAAQ,cAAAqB,gBAAA,uBAAfA,gBAAA,CAAiBnB,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAClF,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMmB,eAAeA,CAACC,EAAE,EAAE;IACxB,IAAI;MACFzB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEwB,EAAE,CAAC;MAC7C,MAAMvB,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAasB,EAAE,EAAE,CAAC;MACjDzB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC/C,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAqB,gBAAA;MACd1B,OAAO,CAACK,KAAK,CAAC,kCAAkC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAqB,gBAAA,GAALrB,KAAK,CAAEH,QAAQ,cAAAwB,gBAAA,uBAAfA,gBAAA,CAAiBtB,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACzF,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMsB,iBAAiBA,CAACF,EAAE,EAAEG,KAAK,EAAE;IACjC,IAAI;MACF5B,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEwB,EAAE,EAAEG,KAAK,CAAC;MAC/C,MAAM1B,QAAQ,GAAG,MAAML,GAAG,CAACgC,GAAG,CAAC,aAAaJ,EAAE,EAAE,EAAEG,KAAK,CAAC;MACxD5B,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAClD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAyB,gBAAA;MACd9B,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAyB,gBAAA,GAALzB,KAAK,CAAEH,QAAQ,cAAA4B,gBAAA,uBAAfA,gBAAA,CAAiB1B,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACrF,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAM0B,aAAaA,CAACN,EAAE,EAAEO,MAAM,EAAE;IAC9B,IAAI;MACFhC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEwB,EAAE,EAAEO,MAAM,CAAC;MAC5C,MAAM9B,QAAQ,GAAG,MAAML,GAAG,CAACgC,GAAG,CAAC,aAAaJ,EAAE,SAAS,EAAE;QAAEO;MAAO,CAAC,CAAC;MACpEhC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC9C,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA4B,gBAAA;MACdjC,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAA4B,gBAAA,GAAL5B,KAAK,CAAEH,QAAQ,cAAA+B,gBAAA,uBAAfA,gBAAA,CAAiB7B,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACjF,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA;EACA;;EAEA,MAAM6B,cAAcA,CAACC,SAAS,EAAEC,GAAG,EAAE;IACnC,IAAI;MACFpC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEkC,SAAS,EAAE,MAAM,EAAEC,GAAG,CAAC;MAC3E,MAAMtB,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;MACpC,IAAIoB,SAAS,EAAErB,MAAM,CAACO,MAAM,CAAC,WAAW,EAAEc,SAAS,CAAC;MACpD,IAAIC,GAAG,EAAEtB,MAAM,CAACO,MAAM,CAAC,KAAK,EAAEe,GAAG,CAAC;MAClC,MAAMlC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,yBAAyBW,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC;MAC5EtB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACpD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAgC,gBAAA;MACdrC,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAgC,gBAAA,GAALhC,KAAK,CAAEH,QAAQ,cAAAmC,gBAAA,uBAAfA,gBAAA,CAAiBjC,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACtF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMiC,cAAcA,CAACC,SAAS,EAAE;IAC9B,IAAI;MACFvC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEsC,SAAS,CAAC;MAC5C,MAAMrC,QAAQ,GAAG,MAAML,GAAG,CAACa,IAAI,CAAC,uBAAuB,EAAE6B,SAAS,CAAC;MACnEvC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC/C,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAmC,gBAAA;MACdxC,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAmC,gBAAA,GAALnC,KAAK,CAAEH,QAAQ,cAAAsC,gBAAA,uBAAfA,gBAAA,CAAiBpC,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAClF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMoC,gBAAgBA,CAACC,WAAW,EAAEC,WAAW,GAAG,EAAE,EAAE;IACpD,IAAI;MACF3C,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEyC,WAAW,EAAEC,WAAW,CAAC;MAC7D,MAAMzC,QAAQ,GAAG,MAAML,GAAG,CAACgC,GAAG,CAAC,yBAAyBa,WAAW,UAAU,EAAE;QAAEC;MAAY,CAAC,CAAC;MAC/F3C,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACjD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAuC,gBAAA;MACd5C,OAAO,CAACK,KAAK,CAAC,6BAA6B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAuC,gBAAA,GAALvC,KAAK,CAAEH,QAAQ,cAAA0C,gBAAA,uBAAfA,gBAAA,CAAiBxC,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACpF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMwC,iBAAiBA,CAACH,WAAW,EAAEC,WAAW,GAAG,EAAE,EAAE;IACrD,IAAI;MACF3C,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEyC,WAAW,EAAEC,WAAW,CAAC;MAC9D,MAAMzC,QAAQ,GAAG,MAAML,GAAG,CAACgC,GAAG,CAAC,yBAAyBa,WAAW,WAAW,EAAE;QAAEC;MAAY,CAAC,CAAC;MAChG3C,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAClD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAyC,gBAAA;MACd9C,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAyC,gBAAA,GAALzC,KAAK,CAAEH,QAAQ,cAAA4C,gBAAA,uBAAfA,gBAAA,CAAiB1C,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACrF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAM0C,iBAAiBA,CAACtB,EAAE,EAAE;IAC1B,IAAI;MACFzB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEwB,EAAE,CAAC;MAC/C,MAAMvB,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,yBAAyBsB,EAAE,EAAE,CAAC;MAC7DzB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACjD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA2C,gBAAA;MACdhD,OAAO,CAACK,KAAK,CAAC,oCAAoC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAA2C,gBAAA,GAAL3C,KAAK,CAAEH,QAAQ,cAAA8C,gBAAA,uBAAfA,gBAAA,CAAiB5C,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAC3F,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAM4C,mBAAmBA,CAACxB,EAAE,EAAEG,KAAK,EAAE;IACnC,IAAI;MACF5B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEwB,EAAE,EAAEG,KAAK,CAAC;MACjD,MAAM1B,QAAQ,GAAG,MAAML,GAAG,CAACgC,GAAG,CAAC,yBAAyBJ,EAAE,EAAE,EAAEG,KAAK,CAAC;MACpE5B,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACpD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA6C,iBAAA;MACdlD,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAA6C,iBAAA,GAAL7C,KAAK,CAAEH,QAAQ,cAAAgD,iBAAA,uBAAfA,iBAAA,CAAiB9C,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACvF,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA;EACA;;EAEA,MAAM8C,gBAAgBA,CAAChB,SAAS,EAAEC,GAAG,EAAE;IACrC,IAAI;MACFpC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEkC,SAAS,EAAE,MAAM,EAAEC,GAAG,CAAC;MAC7E,MAAMtB,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;MACpC,IAAIoB,SAAS,EAAErB,MAAM,CAACO,MAAM,CAAC,WAAW,EAAEc,SAAS,CAAC;MACpD,IAAIC,GAAG,EAAEtB,MAAM,CAACO,MAAM,CAAC,KAAK,EAAEe,GAAG,CAAC;MAClC,MAAMlC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,2BAA2BW,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC;MAC9EtB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACtD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA+C,iBAAA;MACdpD,OAAO,CAACK,KAAK,CAAC,iCAAiC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAA+C,iBAAA,GAAL/C,KAAK,CAAEH,QAAQ,cAAAkD,iBAAA,uBAAfA,iBAAA,CAAiBhD,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACxF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMgD,gBAAgBA,CAACC,WAAW,EAAE;IAClC,IAAI;MACFtD,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEqD,WAAW,CAAC;MAChD,MAAMpD,QAAQ,GAAG,MAAML,GAAG,CAACa,IAAI,CAAC,yBAAyB,EAAE4C,WAAW,CAAC;MACvEtD,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACjD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAkD,iBAAA;MACdvD,OAAO,CAACK,KAAK,CAAC,6BAA6B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAkD,iBAAA,GAALlD,KAAK,CAAEH,QAAQ,cAAAqD,iBAAA,uBAAfA,iBAAA,CAAiBnD,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACpF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMmD,wBAAwBA,CAACC,aAAa,EAAEC,MAAM,EAAEf,WAAW,GAAG,EAAE,EAAE;IACtE,IAAI;MACF3C,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEwD,aAAa,EAAE,GAAG,EAAEC,MAAM,CAAC;MAC3E,MAAMxD,QAAQ,GAAG,MAAML,GAAG,CAACgC,GAAG,CAAC,2BAA2B4B,aAAa,SAAS,EAAE;QAAEC,MAAM;QAAEf;MAAY,CAAC,CAAC;MAC1G3C,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC9C,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAsD,iBAAA;MACd3D,OAAO,CAACK,KAAK,CAAC,yCAAyC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAsD,iBAAA,GAALtD,KAAK,CAAEH,QAAQ,cAAAyD,iBAAA,uBAAfA,iBAAA,CAAiBvD,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAChG,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMuD,mBAAmBA,CAACnC,EAAE,EAAE;IAC5B,IAAI;MACFzB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEwB,EAAE,CAAC;MACjD,MAAMvB,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,2BAA2BsB,EAAE,EAAE,CAAC;MAC/DzB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACnD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAwD,iBAAA;MACd7D,OAAO,CAACK,KAAK,CAAC,sCAAsC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAwD,iBAAA,GAALxD,KAAK,CAAEH,QAAQ,cAAA2D,iBAAA,uBAAfA,iBAAA,CAAiBzD,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAC7F,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMyD,0BAA0BA,CAACC,SAAS,EAAE;IAC1C,IAAI;MACF/D,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE8D,SAAS,CAAC;MAChE,MAAM7D,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAa4D,SAAS,gBAAgB,CAAC;MACtE/D,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACjE,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA2D,iBAAA;MACdhE,OAAO,CAACK,KAAK,CAAC,6CAA6C,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAA2D,iBAAA,GAAL3D,KAAK,CAAEH,QAAQ,cAAA8D,iBAAA,uBAAfA,iBAAA,CAAiB5D,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACpG,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA;EACA;;EAEA,MAAM4D,eAAeA,CAAA,EAAG;IACtB,IAAI;MACFjE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,wBAAwB,CAAC;MACxDH,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACrD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA6D,iBAAA;MACdlE,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAA6D,iBAAA,GAAL7D,KAAK,CAAEH,QAAQ,cAAAgE,iBAAA,uBAAfA,iBAAA,CAAiB9D,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACvF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAM8D,kBAAkBA,CAAA,EAAG;IACzB,IAAI;MACFnE,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,4BAA4B,CAAC;MAC5DH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC3D,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA+D,iBAAA;MACdpE,OAAO,CAACK,KAAK,CAAC,uCAAuC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAA+D,iBAAA,GAAL/D,KAAK,CAAEH,QAAQ,cAAAkE,iBAAA,uBAAfA,iBAAA,CAAiBhE,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAC9F,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMgE,eAAeA,CAACC,OAAO,EAAEC,IAAI,EAAE;IACnC,IAAI;MACFvE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEqE,OAAO,EAAEC,IAAI,CAAC;MACjD,MAAMrE,QAAQ,GAAG,MAAML,GAAG,CAACa,IAAI,CAAC,6BAA6B,EAAE;QAAE4D,OAAO;QAAEC;MAAK,CAAC,CAAC;MACjFvE,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAChD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAmE,iBAAA;MACdxE,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAmE,iBAAA,GAALnE,KAAK,CAAEH,QAAQ,cAAAsE,iBAAA,uBAAfA,iBAAA,CAAiBpE,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACnF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMoE,oBAAoBA,CAAA,EAAG;IAC3B,IAAI;MACFzE,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,oBAAoB,CAAC;MACpDH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC3D,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAqE,iBAAA;MACd1E,OAAO,CAACK,KAAK,CAAC,sCAAsC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAqE,iBAAA,GAALrE,KAAK,CAAEH,QAAQ,cAAAwE,iBAAA,uBAAfA,iBAAA,CAAiBtE,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAC7F,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMsE,iBAAiBA,CAACJ,IAAI,EAAEK,UAAU,GAAG,CAAC,CAAC,EAAE;IAC7C,IAAI;MACF5E,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEsE,IAAI,EAAEK,UAAU,CAAC;MAC7D,MAAM9D,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;MACpCC,MAAM,CAACC,IAAI,CAAC2D,UAAU,CAAC,CAAC1D,OAAO,CAACC,GAAG,IAAI;QACrC,IAAIyD,UAAU,CAACzD,GAAG,CAAC,KAAK,EAAE,IAAIyD,UAAU,CAACzD,GAAG,CAAC,KAAK,IAAI,IAAIyD,UAAU,CAACzD,GAAG,CAAC,KAAKC,SAAS,EAAE;UACvFN,MAAM,CAACO,MAAM,CAACF,GAAG,EAAEyD,UAAU,CAACzD,GAAG,CAAC,CAAC;QACrC;MACF,CAAC,CAAC;MACF,MAAMjB,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,sBAAsBoE,IAAI,IAAIzD,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC;MACjFtB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC/C,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAwE,iBAAA;MACd7E,OAAO,CAACK,KAAK,CAAC,oCAAoC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAwE,iBAAA,GAALxE,KAAK,CAAEH,QAAQ,cAAA2E,iBAAA,uBAAfA,iBAAA,CAAiBzE,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAC3F,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA;EACA;;EAEA,MAAMyE,gBAAgBA,CAAA,EAAG;IACvB,IAAI;MACF9E,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,yBAAyB,CAAC;MACzDH,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACtD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA0E,iBAAA;MACd/E,OAAO,CAACK,KAAK,CAAC,iCAAiC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAA0E,iBAAA,GAAL1E,KAAK,CAAEH,QAAQ,cAAA6E,iBAAA,uBAAfA,iBAAA,CAAiB3E,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACxF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAM2E,WAAWA,CAAA,EAAG;IAClB,IAAI;MACFhF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,oBAAoB,CAAC;MACpDH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACjD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA4E,iBAAA;MACdjF,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAA4E,iBAAA,GAAL5E,KAAK,CAAEH,QAAQ,cAAA+E,iBAAA,uBAAfA,iBAAA,CAAiB7E,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACnF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAM6E,QAAQA,CAAA,EAAG;IACf,IAAI;MACFlF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,iBAAiB,CAAC;MACjDH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC9C,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAA8E,iBAAA;MACdnF,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAA8E,iBAAA,GAAL9E,KAAK,CAAEH,QAAQ,cAAAiF,iBAAA,uBAAfA,iBAAA,CAAiB/E,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAChF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAM+E,gBAAgBA,CAAA,EAAG;IACvB,IAAI;MACFpF,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,yBAAyB,CAAC;MACzDH,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACrD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAgF,iBAAA;MACdrF,OAAO,CAACK,KAAK,CAAC,iCAAiC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAgF,iBAAA,GAALhF,KAAK,CAAEH,QAAQ,cAAAmF,iBAAA,uBAAfA,iBAAA,CAAiBjF,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACxF,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA;EACA;;EAEA,MAAMiF,YAAYA,CAAA,EAAG;IACnB,IAAI;MACFtF,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9C,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,kBAAkB,CAAC;MAClDH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC/C,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAkF,iBAAA;MACdvF,OAAO,CAACK,KAAK,CAAC,oBAAoB,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAkF,iBAAA,GAALlF,KAAK,CAAEH,QAAQ,cAAAqF,iBAAA,uBAAfA,iBAAA,CAAiBnF,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAC3E,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMmF,UAAUA,CAAA,EAAG;IACjB,IAAI;MACFxF,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9C,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,mBAAmB,CAAC;MACnDH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC/C,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAoF,iBAAA;MACdzF,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAoF,iBAAA,GAALpF,KAAK,CAAEH,QAAQ,cAAAuF,iBAAA,uBAAfA,iBAAA,CAAiBrF,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAClF,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA;EACA;;EAEA,MAAMqF,iBAAiBA,CAACvD,SAAS,EAAE;IACjC,IAAI;MACFnC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEkC,SAAS,CAAC;MACjE,MAAMjC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,sCAAsCgC,SAAS,EAAE,CAAC;MACjFnC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACvD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAsF,iBAAA;MACd3F,OAAO,CAACK,KAAK,CAAC,kCAAkC,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAsF,iBAAA,GAALtF,KAAK,CAAEH,QAAQ,cAAAyF,iBAAA,uBAAfA,iBAAA,CAAiBvF,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACzF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMuF,uBAAuBA,CAACC,cAAc,EAAE;IAC5C,IAAI;MACF7F,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE4F,cAAc,CAAC;MAChE,MAAM3F,QAAQ,GAAG,MAAML,GAAG,CAACgC,GAAG,CAAC,4BAA4BgE,cAAc,QAAQ,CAAC;MAClF7F,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC9D,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAyF,iBAAA;MACd9F,OAAO,CAACK,KAAK,CAAC,0CAA0C,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAyF,iBAAA,GAALzF,KAAK,CAAEH,QAAQ,cAAA4F,iBAAA,uBAAfA,iBAAA,CAAiB1F,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACjG,MAAMF,KAAK;IACb;EACF,CAAC;EAED;EACA;EACA;;EAEA,MAAM0F,YAAYA,CAACC,OAAO,EAAEzB,IAAI,GAAG,WAAW,EAAE;IAC9C,IAAI;MACFvE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE+F,OAAO,CAACC,IAAI,EAAE,OAAO,EAAE1B,IAAI,CAAC;MAC7D,MAAM2B,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAAC7E,MAAM,CAAC,SAAS,EAAE2E,OAAO,CAAC;MACnCE,QAAQ,CAAC7E,MAAM,CAAC,MAAM,EAAEkD,IAAI,CAAC;MAE7B,MAAMrE,QAAQ,GAAG,MAAML,GAAG,CAACa,IAAI,CAAC,oBAAoB,EAAEwF,QAAQ,EAAE;QAC9DE,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFpG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC7C,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAgG,iBAAA;MACdrG,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAgG,iBAAA,GAALhG,KAAK,CAAEH,QAAQ,cAAAmG,iBAAA,uBAAfA,iBAAA,CAAiBjG,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MAChF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMiG,gBAAgBA,CAACC,SAAS,EAAE;IAChC,IAAI;MACFvG,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEsG,SAAS,CAAC;MAC9C,MAAMrG,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,sBAAsBoG,SAAS,EAAE,EAAE;QAChEC,YAAY,EAAE;MAChB,CAAC,CAAC;MACFxG,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAoG,iBAAA;MACdzG,OAAO,CAACK,KAAK,CAAC,6BAA6B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAoG,iBAAA,GAALpG,KAAK,CAAEH,QAAQ,cAAAuG,iBAAA,uBAAfA,iBAAA,CAAiBrG,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACpF,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMqG,eAAeA,CAACH,SAAS,EAAE;IAC/B,IAAI;MACFvG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEsG,SAAS,CAAC;MAC7C,MAAMrG,QAAQ,GAAG,MAAML,GAAG,CAAC8G,MAAM,CAAC,sBAAsBJ,SAAS,EAAE,CAAC;MACpEvG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAChD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAuG,iBAAA;MACd5G,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAuG,iBAAA,GAALvG,KAAK,CAAEH,QAAQ,cAAA0G,iBAAA,uBAAfA,iBAAA,CAAiBxG,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;MACnF,MAAMF,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeP,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// src/context/AuthContext.jsx\nimport React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[permisos,setPermisos]=useState([]);const[loading,setLoading]=useState(true);const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Configurar axios con interceptores para manejo automático de tokens\nuseEffect(()=>{// Interceptor para agregar token a todas las peticiones\nconst requestInterceptor=axios.interceptors.request.use(config=>{const token=localStorage.getItem('rrhh_token');if(token){config.headers.Authorization=`Bearer ${token}`;}console.log('Petición enviada con token:',token?'SI':'NO');return config;},error=>Promise.reject(error));// Interceptor para manejar errores 401\nconst responseInterceptor=axios.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){console.warn('Error 401: Token inválido o expirado');logout();}return Promise.reject(error);});// Limpiar interceptores al desmontar\nreturn()=>{axios.interceptors.request.eject(requestInterceptor);axios.interceptors.response.eject(responseInterceptor);};},[]);// Validación de token mejorada\nconst isTokenValid=token=>{if(!token){console.log('No hay token para validar');return false;}try{// Verificar formato básico del token\nif(token.length<10){console.log('Token demasiado corto');return false;}// Si es JWT, validar estructura\nif(token.includes('.')){const parts=token.split('.');if(parts.length!==3){console.log('JWT mal formado');return false;}const payload=JSON.parse(atob(parts[1]));console.log('Payload del token:',payload);// Si no tiene exp, considerar válido (tokens sin expiración)\nif(!payload.exp){console.log('Token sin expiración - considerado válido');return true;}const currentTime=Date.now()/1000;const isValid=payload.exp>currentTime;console.log('Token expirado:',!isValid);return isValid;}else{// Token simple (no JWT)\nconsole.log('Token simple - considerado válido');return true;}}catch(error){console.error('Error validando token:',error);return false;}};const mapEstado=estado=>estado===1||estado===true?'Activo':'Inactivo';const formatUser=userData=>({id:userData.id,name:`${userData.nombre||''} ${userData.apellido||''}`.trim()||'Usuario',position:userData.puesto||userData.rol||'',role:userData.rol||'Sistema',email:userData.email,empleadoId:userData.empleadoId,estado:mapEstado(userData.estado)});// ============================\n// LOGIN\n// ============================\nconst login=async(email,password)=>{setLoading(true);console.log('Intentando login para:',email);try{const res=await fetch(`${API_URL}/auth/login`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const data=await res.json();console.log('Respuesta del login:',data);if(!res.ok){throw new Error(data.message||'Error al iniciar sesión');}// Guardar token\nlocalStorage.setItem('rrhh_token',data.token);console.log('Token guardado:',data.token.substring(0,20)+'...');// Establecer usuario y permisos\nconst formattedUser=formatUser(data.user);setUser(formattedUser);setPermisos(data.permisos||[]);console.log('Usuario logueado:',formattedUser);console.log('Permisos:',data.permisos);return{success:true};}catch(error){console.error('Error en login:',error);return{success:false,error:error.message};}finally{setLoading(false);}};// ============================\n// LOGOUT\n// ============================\nconst logout=()=>{console.log('Haciendo logout...');localStorage.removeItem('rrhh_token');setUser(null);setPermisos([]);console.log('Logout completado');};// ============================\n// VERIFICAR TOKEN / USUARIO\n// ============================\nconst verifyUser=async()=>{console.log('Verificando usuario...');const token=localStorage.getItem('rrhh_token');if(!token){console.log('No hay token guardado');setLoading(false);return;}if(!isTokenValid(token)){console.log('Token inválido, haciendo logout');logout();setLoading(false);return;}try{console.log('Verificando token con servidor...');const res=await fetch(`${API_URL}/auth/verify`,{headers:{'Content-Type':'application/json',Authorization:`Bearer ${token}`}});const data=await res.json();console.log('Respuesta de verificación:',data);// Chequeo para usuario inactivo o token inválido\nif(!res.ok||data.success===false){console.warn('Token inválido o usuario inactivo, haciendo logout');logout();return;}// Verificar si el usuario está activo\nif(data.user.estado===1||data.user.estado===true){const formattedUser=formatUser(data.user);setUser(formattedUser);setPermisos(data.permisos||[]);console.log('Usuario verificado y activo:',formattedUser);}else{console.warn('Usuario inactivo, haciendo logout');logout();}}catch(error){console.error('Error verificando usuario:',error);logout();}finally{setLoading(false);}};// Mantener sesión al cargar la app\nuseEffect(()=>{verifyUser();},[]);// ============================\n// FORGOT PASSWORD\n// ============================\nconst forgotPassword=async email=>{try{console.log('Solicitando reset de contraseña para:',email);const res=await fetch(`${API_URL}/auth/forgot-password`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email})});const data=await res.json();if(!res.ok)throw new Error(data.message||'Error al enviar email');console.log('Email de reset enviado');return{success:true,message:data.message||'Email enviado correctamente'};}catch(error){console.error('Error en forgot password:',error);return{success:false,error:error.message};}};// ============================\n// RESET PASSWORD\n// ============================\nconst resetPassword=async(token,newPassword)=>{try{console.log('Reseteando contraseña con token');const res=await fetch(`${API_URL}/auth/reset-password`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({token,newPassword})});const data=await res.json();if(!res.ok)throw new Error(data.message||'Error al restablecer contraseña');console.log('Contraseña restablecida exitosamente');return{success:true,message:data.message||'Contraseña actualizada correctamente'};}catch(error){console.error('Error en reset password:',error);return{success:false,error:error.message};}};// ============================\n// CHANGE PASSWORD (usuario logueado)\n// ============================\nconst changePassword=async(currentPassword,newPassword)=>{const token=localStorage.getItem('rrhh_token');if(!token||!isTokenValid(token)){return{success:false,error:'No estás autenticado'};}try{console.log('Cambiando contraseña de usuario logueado');const res=await fetch(`${API_URL}/auth/change-password`,{method:'POST',headers:{'Content-Type':'application/json',Authorization:`Bearer ${token}`},body:JSON.stringify({currentPassword,newPassword})});const data=await res.json();if(!res.ok){if(res.status===401)logout();throw new Error(data.message||'Error cambiando contraseña');}console.log('Contraseña cambiada exitosamente');return{success:true,message:data.message||'Contraseña cambiada correctamente'};}catch(error){console.error('Error cambiando contraseña:',error);return{success:false,error:error.message};}};// ============================\n// FUNCIONES DE DEBUG\n// ============================\nconst getTokenInfo=()=>{const token=localStorage.getItem('rrhh_token');if(!token)return{hasToken:false};const info={hasToken:true,tokenLength:token.length,tokenPreview:token.substring(0,20)+'...',isValid:isTokenValid(token)};if(token.includes('.')){try{const payload=JSON.parse(atob(token.split('.')[1]));info.payload=payload;info.isJWT=true;}catch(e){info.isJWT=false;info.parseError=e.message;}}else{info.isJWT=false;info.tokenType='simple';}return info;};// Crear un token temporal para desarrollo/testing\nconst setTempToken=function(){let tokenValue=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'temp-dev-token-12345';console.log('Estableciendo token temporal:',tokenValue);localStorage.setItem('rrhh_token',tokenValue);// Establecer usuario temporal\nconst tempUser={id:1,nombre:'Usuario',apellido:'Temporal',email:'temp@test.com',rol:'Admin',estado:1};setUser(formatUser(tempUser));setPermisos(['admin','reportes','usuarios']);console.log('Usuario temporal establecido');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,permisos,login,logout,forgotPassword,resetPassword,changePassword,loading,isTokenValid,// Funciones de debug\ngetTokenInfo,setTempToken,verifyUser},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context)throw new Error('useAuth debe usarse dentro de un AuthProvider');return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","permisos","setPermisos","loading","setLoading","API_URL","process","env","REACT_APP_API_URL","requestInterceptor","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","console","log","error","Promise","reject","responseInterceptor","response","_error$response","status","warn","logout","eject","isTokenValid","length","includes","parts","split","payload","JSON","parse","atob","exp","currentTime","Date","now","isValid","mapEstado","estado","formatUser","userData","id","name","nombre","apellido","trim","position","puesto","rol","role","email","empleadoId","login","password","res","fetch","method","body","stringify","data","json","ok","Error","message","setItem","substring","formattedUser","success","removeItem","verifyUser","forgotPassword","resetPassword","newPassword","changePassword","currentPassword","getTokenInfo","hasToken","info","tokenLength","tokenPreview","isJWT","e","parseError","tokenType","setTempToken","tokenValue","arguments","undefined","tempUser","Provider","value","useAuth","context"],"sources":["C:/Users/josemontedeoca/rrhh-system/frontend/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.jsx\r\nimport React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null)\r\n  const [permisos, setPermisos] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\r\n\r\n  // Configurar axios con interceptores para manejo automático de tokens\r\n  useEffect(() => {\r\n    // Interceptor para agregar token a todas las peticiones\r\n    const requestInterceptor = axios.interceptors.request.use(\r\n      (config) => {\r\n        const token = localStorage.getItem('rrhh_token')\r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`\r\n        }\r\n        console.log('Petición enviada con token:', token ? 'SI' : 'NO')\r\n        return config\r\n      },\r\n      (error) => Promise.reject(error)\r\n    )\r\n\r\n    // Interceptor para manejar errores 401\r\n    const responseInterceptor = axios.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        if (error.response?.status === 401) {\r\n          console.warn('Error 401: Token inválido o expirado')\r\n          logout()\r\n        }\r\n        return Promise.reject(error)\r\n      }\r\n    )\r\n\r\n    // Limpiar interceptores al desmontar\r\n    return () => {\r\n      axios.interceptors.request.eject(requestInterceptor)\r\n      axios.interceptors.response.eject(responseInterceptor)\r\n    }\r\n  }, [])\r\n\r\n  // Validación de token mejorada\r\n  const isTokenValid = (token) => {\r\n    if (!token) {\r\n      console.log('No hay token para validar')\r\n      return false\r\n    }\r\n\r\n    try {\r\n      // Verificar formato básico del token\r\n      if (token.length < 10) {\r\n        console.log('Token demasiado corto')\r\n        return false\r\n      }\r\n\r\n      // Si es JWT, validar estructura\r\n      if (token.includes('.')) {\r\n        const parts = token.split('.')\r\n        if (parts.length !== 3) {\r\n          console.log('JWT mal formado')\r\n          return false\r\n        }\r\n\r\n        const payload = JSON.parse(atob(parts[1]))\r\n        console.log('Payload del token:', payload)\r\n\r\n        // Si no tiene exp, considerar válido (tokens sin expiración)\r\n        if (!payload.exp) {\r\n          console.log('Token sin expiración - considerado válido')\r\n          return true\r\n        }\r\n\r\n        const currentTime = Date.now() / 1000\r\n        const isValid = payload.exp > currentTime\r\n        console.log('Token expirado:', !isValid)\r\n        return isValid\r\n      } else {\r\n        // Token simple (no JWT)\r\n        console.log('Token simple - considerado válido')\r\n        return true\r\n      }\r\n    } catch (error) {\r\n      console.error('Error validando token:', error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  const mapEstado = (estado) => (estado === 1 || estado === true ? 'Activo' : 'Inactivo')\r\n\r\n  const formatUser = (userData) => ({\r\n    id: userData.id,\r\n    name: `${userData.nombre || ''} ${userData.apellido || ''}`.trim() || 'Usuario',\r\n    position: userData.puesto || userData.rol || '',\r\n    role: userData.rol || 'Sistema',\r\n    email: userData.email,\r\n    empleadoId: userData.empleadoId,\r\n    estado: mapEstado(userData.estado),\r\n  })\r\n\r\n  // ============================\r\n  // LOGIN\r\n  // ============================\r\n  const login = async (email, password) => {\r\n    setLoading(true)\r\n    console.log('Intentando login para:', email)\r\n\r\n    try {\r\n      const res = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      })\r\n\r\n      const data = await res.json()\r\n      console.log('Respuesta del login:', data)\r\n\r\n      if (!res.ok) {\r\n        throw new Error(data.message || 'Error al iniciar sesión')\r\n      }\r\n\r\n      // Guardar token\r\n      localStorage.setItem('rrhh_token', data.token)\r\n      console.log('Token guardado:', data.token.substring(0, 20) + '...')\r\n\r\n      // Establecer usuario y permisos\r\n      const formattedUser = formatUser(data.user)\r\n      setUser(formattedUser)\r\n      setPermisos(data.permisos || [])\r\n\r\n      console.log('Usuario logueado:', formattedUser)\r\n      console.log('Permisos:', data.permisos)\r\n\r\n      return { success: true }\r\n    } catch (error) {\r\n      console.error('Error en login:', error)\r\n      return { success: false, error: error.message }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // ============================\r\n  // LOGOUT\r\n  // ============================\r\n  const logout = () => {\r\n    console.log('Haciendo logout...')\r\n    localStorage.removeItem('rrhh_token')\r\n    setUser(null)\r\n    setPermisos([])\r\n    console.log('Logout completado')\r\n  }\r\n\r\n  // ============================\r\n  // VERIFICAR TOKEN / USUARIO\r\n  // ============================\r\n  const verifyUser = async () => {\r\n    console.log('Verificando usuario...')\r\n    const token = localStorage.getItem('rrhh_token')\r\n    \r\n    if (!token) {\r\n      console.log('No hay token guardado')\r\n      setLoading(false)\r\n      return\r\n    }\r\n\r\n    if (!isTokenValid(token)) {\r\n      console.log('Token inválido, haciendo logout')\r\n      logout()\r\n      setLoading(false)\r\n      return\r\n    }\r\n\r\n    try {\r\n      console.log('Verificando token con servidor...')\r\n      const res = await fetch(`${API_URL}/auth/verify`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      const data = await res.json()\r\n      console.log('Respuesta de verificación:', data)\r\n\r\n      // Chequeo para usuario inactivo o token inválido\r\n      if (!res.ok || data.success === false) {\r\n        console.warn('Token inválido o usuario inactivo, haciendo logout')\r\n        logout()\r\n        return\r\n      }\r\n\r\n      // Verificar si el usuario está activo\r\n      if (data.user.estado === 1 || data.user.estado === true) {\r\n        const formattedUser = formatUser(data.user)\r\n        setUser(formattedUser)\r\n        setPermisos(data.permisos || [])\r\n        console.log('Usuario verificado y activo:', formattedUser)\r\n      } else {\r\n        console.warn('Usuario inactivo, haciendo logout')\r\n        logout()\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verificando usuario:', error)\r\n      logout()\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Mantener sesión al cargar la app\r\n  useEffect(() => {\r\n    verifyUser()\r\n  }, [])\r\n\r\n  // ============================\r\n  // FORGOT PASSWORD\r\n  // ============================\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      console.log('Solicitando reset de contraseña para:', email)\r\n      const res = await fetch(`${API_URL}/auth/forgot-password`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      })\r\n\r\n      const data = await res.json()\r\n      if (!res.ok) throw new Error(data.message || 'Error al enviar email')\r\n      \r\n      console.log('Email de reset enviado')\r\n      return { success: true, message: data.message || 'Email enviado correctamente' }\r\n    } catch (error) {\r\n      console.error('Error en forgot password:', error)\r\n      return { success: false, error: error.message }\r\n    }\r\n  }\r\n\r\n  // ============================\r\n  // RESET PASSWORD\r\n  // ============================\r\n  const resetPassword = async (token, newPassword) => {\r\n    try {\r\n      console.log('Reseteando contraseña con token')\r\n      const res = await fetch(`${API_URL}/auth/reset-password`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ token, newPassword }),\r\n      })\r\n\r\n      const data = await res.json()\r\n      if (!res.ok) throw new Error(data.message || 'Error al restablecer contraseña')\r\n      \r\n      console.log('Contraseña restablecida exitosamente')\r\n      return { success: true, message: data.message || 'Contraseña actualizada correctamente' }\r\n    } catch (error) {\r\n      console.error('Error en reset password:', error)\r\n      return { success: false, error: error.message }\r\n    }\r\n  }\r\n\r\n  // ============================\r\n  // CHANGE PASSWORD (usuario logueado)\r\n  // ============================\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    const token = localStorage.getItem('rrhh_token')\r\n    if (!token || !isTokenValid(token)) {\r\n      return { success: false, error: 'No estás autenticado' }\r\n    }\r\n\r\n    try {\r\n      console.log('Cambiando contraseña de usuario logueado')\r\n      const res = await fetch(`${API_URL}/auth/change-password`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ currentPassword, newPassword }),\r\n      })\r\n\r\n      const data = await res.json()\r\n      if (!res.ok) {\r\n        if (res.status === 401) logout()\r\n        throw new Error(data.message || 'Error cambiando contraseña')\r\n      }\r\n\r\n      console.log('Contraseña cambiada exitosamente')\r\n      return { success: true, message: data.message || 'Contraseña cambiada correctamente' }\r\n    } catch (error) {\r\n      console.error('Error cambiando contraseña:', error)\r\n      return { success: false, error: error.message }\r\n    }\r\n  }\r\n\r\n  // ============================\r\n  // FUNCIONES DE DEBUG\r\n  // ============================\r\n  const getTokenInfo = () => {\r\n    const token = localStorage.getItem('rrhh_token')\r\n    if (!token) return { hasToken: false }\r\n\r\n    const info = {\r\n      hasToken: true,\r\n      tokenLength: token.length,\r\n      tokenPreview: token.substring(0, 20) + '...',\r\n      isValid: isTokenValid(token)\r\n    }\r\n\r\n    if (token.includes('.')) {\r\n      try {\r\n        const payload = JSON.parse(atob(token.split('.')[1]))\r\n        info.payload = payload\r\n        info.isJWT = true\r\n      } catch (e) {\r\n        info.isJWT = false\r\n        info.parseError = e.message\r\n      }\r\n    } else {\r\n      info.isJWT = false\r\n      info.tokenType = 'simple'\r\n    }\r\n\r\n    return info\r\n  }\r\n\r\n  // Crear un token temporal para desarrollo/testing\r\n  const setTempToken = (tokenValue = 'temp-dev-token-12345') => {\r\n    console.log('Estableciendo token temporal:', tokenValue)\r\n    localStorage.setItem('rrhh_token', tokenValue)\r\n    \r\n    // Establecer usuario temporal\r\n    const tempUser = {\r\n      id: 1,\r\n      nombre: 'Usuario',\r\n      apellido: 'Temporal',\r\n      email: 'temp@test.com',\r\n      rol: 'Admin',\r\n      estado: 1\r\n    }\r\n    \r\n    setUser(formatUser(tempUser))\r\n    setPermisos(['admin', 'reportes', 'usuarios'])\r\n    console.log('Usuario temporal establecido')\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        permisos,\r\n        login,\r\n        logout,\r\n        forgotPassword,\r\n        resetPassword,\r\n        changePassword,\r\n        loading,\r\n        isTokenValid,\r\n        // Funciones de debug\r\n        getTokenInfo,\r\n        setTempToken,\r\n        verifyUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext)\r\n  if (!context) throw new Error('useAuth debe usarse dentro de un AuthProvider')\r\n  return context\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
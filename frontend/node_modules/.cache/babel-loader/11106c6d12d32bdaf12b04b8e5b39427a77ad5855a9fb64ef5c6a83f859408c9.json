{"ast":null,"code":"// frontend/src/api/postulacionesService.js\nimport api from'./api';const postulacionesService={// Obtener todas las postulaciones con filtros\nasync getPostulaciones(){let filtros=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{var _response$data;console.log('üìã Obteniendo postulaciones con filtros:',filtros);const params=new URLSearchParams();Object.keys(filtros).forEach(key=>{if(filtros[key]!==''&&filtros[key]!==null&&filtros[key]!==undefined){params.append(key,filtros[key]);}});const response=await api.get(`/postulaciones?${params.toString()}`);console.log('‚úÖ Postulaciones obtenidas:',((_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.length)||0);return response.data;}catch(error){var _error$response;console.error('‚ùå Error al obtener postulaciones:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);throw error;}},// Obtener postulaci√≥n por ID\nasync getPostulacionById(id){try{console.log('üîç Obteniendo postulaci√≥n:',id);const response=await api.get(`/postulaciones/${id}`);console.log('‚úÖ Postulaci√≥n obtenida:',response.data);return response.data;}catch(error){var _error$response2;console.error('‚ùå Error al obtener postulaci√≥n:',((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message);throw error;}},// Crear nueva postulaci√≥n\nasync crearPostulacion(postulacion){try{console.log('‚ûï Creando postulaci√≥n:',postulacion);const response=await api.post('/postulaciones',postulacion);console.log('‚úÖ Postulaci√≥n creada:',response.data);return response.data;}catch(error){var _error$response3;console.error('‚ùå Error al crear postulaci√≥n:',((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||error.message);throw error;}},// Actualizar postulaci√≥n\nasync actualizarPostulacion(id,datos){try{console.log('‚úèÔ∏è Actualizando postulaci√≥n:',id,datos);const response=await api.put(`/postulaciones/${id}`,datos);console.log('‚úÖ Postulaci√≥n actualizada:',response.data);return response.data;}catch(error){var _error$response4;console.error('‚ùå Error al actualizar postulaci√≥n:',((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.data)||error.message);throw error;}},// Cambiar estado\nasync cambiarEstado(id,estado){let comentarios=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';let revisadoPor=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;try{console.log('üîÑ Cambiando estado de postulaci√≥n:',id,'a',estado);const response=await api.put(`/postulaciones/${id}/estado`,{estado,comentarios,revisadoPor});console.log('‚úÖ Estado cambiado:',response.data);return response.data;}catch(error){var _error$response5;console.error('‚ùå Error al cambiar estado:',((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.data)||error.message);throw error;}},// Calificar postulaci√≥n\nasync calificar(id,calificacion){let comentarios=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';let revisadoPor=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;try{console.log('‚≠ê Calificando postulaci√≥n:',id,'con',calificacion);const response=await api.put(`/postulaciones/${id}/calificar`,{calificacion,comentarios,revisadoPor});console.log('‚úÖ Calificaci√≥n registrada:',response.data);return response.data;}catch(error){var _error$response6;console.error('‚ùå Error al calificar:',((_error$response6=error.response)===null||_error$response6===void 0?void 0:_error$response6.data)||error.message);throw error;}},// Eliminar postulaci√≥n\nasync eliminar(id){try{console.log('üóëÔ∏è Eliminando postulaci√≥n:',id);const response=await api.delete(`/postulaciones/${id}`);console.log('‚úÖ Postulaci√≥n eliminada:',response.data);return response.data;}catch(error){var _error$response7;console.error('‚ùå Error al eliminar postulaci√≥n:',((_error$response7=error.response)===null||_error$response7===void 0?void 0:_error$response7.data)||error.message);throw error;}},// Obtener estad√≠sticas\nasync getEstadisticas(){let vacanteId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;try{console.log('üìä Obteniendo estad√≠sticas de postulaciones');const params=vacanteId?`?vacanteId=${vacanteId}`:'';const response=await api.get(`/postulaciones/estadisticas${params}`);console.log('‚úÖ Estad√≠sticas obtenidas:',response.data);return response.data;}catch(error){var _error$response8;console.error('‚ùå Error al obtener estad√≠sticas:',((_error$response8=error.response)===null||_error$response8===void 0?void 0:_error$response8.data)||error.message);throw error;}}};export default postulacionesService;","map":{"version":3,"names":["api","postulacionesService","getPostulaciones","filtros","arguments","length","undefined","_response$data","console","log","params","URLSearchParams","Object","keys","forEach","key","append","response","get","toString","data","error","_error$response","message","getPostulacionById","id","_error$response2","crearPostulacion","postulacion","post","_error$response3","actualizarPostulacion","datos","put","_error$response4","cambiarEstado","estado","comentarios","revisadoPor","_error$response5","calificar","calificacion","_error$response6","eliminar","delete","_error$response7","getEstadisticas","vacanteId","_error$response8"],"sources":["C:/Users/josemontedeoca/rrhh-system/frontend/src/api/postulacionesService.js"],"sourcesContent":["// frontend/src/api/postulacionesService.js\r\nimport api from './api';\r\n\r\nconst postulacionesService = {\r\n  // Obtener todas las postulaciones con filtros\r\n  async getPostulaciones(filtros = {}) {\r\n    try {\r\n      console.log('üìã Obteniendo postulaciones con filtros:', filtros);\r\n      const params = new URLSearchParams();\r\n      \r\n      Object.keys(filtros).forEach(key => {\r\n        if (filtros[key] !== '' && filtros[key] !== null && filtros[key] !== undefined) {\r\n          params.append(key, filtros[key]);\r\n        }\r\n      });\r\n      \r\n      const response = await api.get(`/postulaciones?${params.toString()}`);\r\n      console.log('‚úÖ Postulaciones obtenidas:', response.data?.length || 0);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('‚ùå Error al obtener postulaciones:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener postulaci√≥n por ID\r\n  async getPostulacionById(id) {\r\n    try {\r\n      console.log('üîç Obteniendo postulaci√≥n:', id);\r\n      const response = await api.get(`/postulaciones/${id}`);\r\n      console.log('‚úÖ Postulaci√≥n obtenida:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('‚ùå Error al obtener postulaci√≥n:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Crear nueva postulaci√≥n\r\n  async crearPostulacion(postulacion) {\r\n    try {\r\n      console.log('‚ûï Creando postulaci√≥n:', postulacion);\r\n      const response = await api.post('/postulaciones', postulacion);\r\n      console.log('‚úÖ Postulaci√≥n creada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('‚ùå Error al crear postulaci√≥n:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Actualizar postulaci√≥n\r\n  async actualizarPostulacion(id, datos) {\r\n    try {\r\n      console.log('‚úèÔ∏è Actualizando postulaci√≥n:', id, datos);\r\n      const response = await api.put(`/postulaciones/${id}`, datos);\r\n      console.log('‚úÖ Postulaci√≥n actualizada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('‚ùå Error al actualizar postulaci√≥n:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Cambiar estado\r\n  async cambiarEstado(id, estado, comentarios = '', revisadoPor = null) {\r\n    try {\r\n      console.log('üîÑ Cambiando estado de postulaci√≥n:', id, 'a', estado);\r\n      const response = await api.put(`/postulaciones/${id}/estado`, { \r\n        estado, \r\n        comentarios,\r\n        revisadoPor\r\n      });\r\n      console.log('‚úÖ Estado cambiado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('‚ùå Error al cambiar estado:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Calificar postulaci√≥n\r\n  async calificar(id, calificacion, comentarios = '', revisadoPor = null) {\r\n    try {\r\n      console.log('‚≠ê Calificando postulaci√≥n:', id, 'con', calificacion);\r\n      const response = await api.put(`/postulaciones/${id}/calificar`, { \r\n        calificacion, \r\n        comentarios,\r\n        revisadoPor\r\n      });\r\n      console.log('‚úÖ Calificaci√≥n registrada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('‚ùå Error al calificar:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Eliminar postulaci√≥n\r\n  async eliminar(id) {\r\n    try {\r\n      console.log('üóëÔ∏è Eliminando postulaci√≥n:', id);\r\n      const response = await api.delete(`/postulaciones/${id}`);\r\n      console.log('‚úÖ Postulaci√≥n eliminada:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('‚ùå Error al eliminar postulaci√≥n:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener estad√≠sticas\r\n  async getEstadisticas(vacanteId = null) {\r\n    try {\r\n      console.log('üìä Obteniendo estad√≠sticas de postulaciones');\r\n      const params = vacanteId ? `?vacanteId=${vacanteId}` : '';\r\n      const response = await api.get(`/postulaciones/estadisticas${params}`);\r\n      console.log('‚úÖ Estad√≠sticas obtenidas:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('‚ùå Error al obtener estad√≠sticas:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default postulacionesService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
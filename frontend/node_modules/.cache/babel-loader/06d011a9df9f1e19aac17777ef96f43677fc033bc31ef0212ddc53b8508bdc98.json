{"ast":null,"code":"const API_URL=process.env.REACT_APP_API_URL||'http://192.168.0.239:5000/api';// Obtener token del localStorage\nconst getToken=()=>localStorage.getItem('token');// Headers comunes\nconst getHeaders=()=>({'Authorization':`Bearer ${getToken()}`,'Content-Type':'application/json'});// ===================== ACCIONES DE PERSONAL API =====================\n// Obtener todos los tipos de acción disponibles\nexport const getTiposAccion=async()=>{try{const response=await fetch(`${API_URL}/acciones-personal/tipos`,{headers:getHeaders()});return await response.json();}catch(error){console.error('Error al obtener tipos de acción:',error);throw error;}};// Obtener estadísticas del dashboard\nexport const getEstadisticas=async()=>{try{const response=await fetch(`${API_URL}/acciones-personal/estadisticas`,{headers:getHeaders()});return await response.json();}catch(error){console.error('Error al obtener estadísticas:',error);throw error;}};// Obtener acciones pendientes de aprobación\nexport const getAccionesPendientes=async()=>{try{const response=await fetch(`${API_URL}/acciones-personal/pendientes`,{headers:getHeaders()});return await response.json();}catch(error){console.error('Error al obtener acciones pendientes:',error);throw error;}};// Obtener todas las acciones (con filtros opcionales)\nexport const getAcciones=async function(){let filtros=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const params=new URLSearchParams();if(filtros.tipo)params.append('tipo',filtros.tipo);if(filtros.estado)params.append('estado',filtros.estado);if(filtros.empleadoId)params.append('empleadoId',filtros.empleadoId);if(filtros.fechaDesde)params.append('fechaDesde',filtros.fechaDesde);if(filtros.fechaHasta)params.append('fechaHasta',filtros.fechaHasta);const queryString=params.toString();const url=queryString?`${API_URL}/acciones-personal?${queryString}`:`${API_URL}/acciones-personal`;const response=await fetch(url,{headers:getHeaders()});return await response.json();}catch(error){console.error('Error al obtener acciones:',error);throw error;}};// Obtener una acción específica por ID\nexport const getAccionById=async accionId=>{try{const response=await fetch(`${API_URL}/acciones-personal/${accionId}`,{headers:getHeaders()});return await response.json();}catch(error){console.error('Error al obtener acción:',error);throw error;}};// Obtener historial de un empleado\nexport const getHistorialEmpleado=async empleadoId=>{try{const response=await fetch(`${API_URL}/acciones-personal/historial/${empleadoId}`,{headers:getHeaders()});return await response.json();}catch(error){console.error('Error al obtener historial:',error);throw error;}};// Crear nueva acción de personal\nexport const crearAccion=async datos=>{try{const response=await fetch(`${API_URL}/acciones-personal`,{method:'POST',headers:getHeaders(),body:JSON.stringify(datos)});return await response.json();}catch(error){console.error('Error al crear acción:',error);throw error;}};// Actualizar acción (solo si está pendiente)\nexport const actualizarAccion=async(accionId,datos)=>{try{const response=await fetch(`${API_URL}/acciones-personal/${accionId}`,{method:'PUT',headers:getHeaders(),body:JSON.stringify(datos)});return await response.json();}catch(error){console.error('Error al actualizar acción:',error);throw error;}};// Aprobar acción\nexport const aprobarAccion=async function(accionId){let comentarios=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';try{const response=await fetch(`${API_URL}/acciones-personal/${accionId}/aprobar`,{method:'POST',headers:getHeaders(),body:JSON.stringify({comentarios})});return await response.json();}catch(error){console.error('Error al aprobar acción:',error);throw error;}};// Rechazar acción\nexport const rechazarAccion=async(accionId,motivo)=>{try{const response=await fetch(`${API_URL}/acciones-personal/${accionId}/rechazar`,{method:'POST',headers:getHeaders(),body:JSON.stringify({motivo})});return await response.json();}catch(error){console.error('Error al rechazar acción:',error);throw error;}};// Ejecutar acción (aplicar cambios)\nexport const ejecutarAccion=async accionId=>{try{const response=await fetch(`${API_URL}/acciones-personal/${accionId}/ejecutar`,{method:'POST',headers:getHeaders()});return await response.json();}catch(error){console.error('Error al ejecutar acción:',error);throw error;}};// Eliminar acción\nexport const eliminarAccion=async accionId=>{try{const response=await fetch(`${API_URL}/acciones-personal/${accionId}`,{method:'DELETE',headers:getHeaders()});return await response.json();}catch(error){console.error('Error al eliminar acción:',error);throw error;}};// Subir documento a una acción\nexport const subirDocumento=async(accionId,archivo,tipoDocumento)=>{try{const formData=new FormData();formData.append('documento',archivo);formData.append('tipoDocumento',tipoDocumento);const response=await fetch(`${API_URL}/acciones-personal/${accionId}/documentos`,{method:'POST',headers:{'Authorization':`Bearer ${getToken()}`// No incluir Content-Type para FormData, el browser lo configura automáticamente\n},body:formData});return await response.json();}catch(error){console.error('Error al subir documento:',error);throw error;}};// Obtener documentos de una acción\nexport const getDocumentosAccion=async accionId=>{try{const response=await fetch(`${API_URL}/acciones-personal/${accionId}/documentos`,{headers:getHeaders()});return await response.json();}catch(error){console.error('Error al obtener documentos:',error);throw error;}};// Descargar documento\nexport const descargarDocumento=async(rutaArchivo,nombreArchivo)=>{try{const response=await fetch(`${API_URL.replace('/api','')}/${rutaArchivo}`,{headers:{'Authorization':`Bearer ${getToken()}`}});if(!response.ok)throw new Error('Error al descargar documento');const blob=await response.blob();const url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=nombreArchivo;document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);return{success:true};}catch(error){console.error('Error al descargar documento:',error);throw error;}};// ===================== APIS AUXILIARES (para formularios) =====================\n// Obtener empleados activos\nexport const getEmpleados=async()=>{try{const response=await fetch(`${API_URL}/empleados`,{headers:getHeaders()});return await response.json();}catch(error){console.error('Error al obtener empleados:',error);throw error;}};// Obtener departamentos\nexport const getDepartamentos=async()=>{try{const response=await fetch(`${API_URL}/departamentos`,{headers:getHeaders()});return await response.json();}catch(error){console.error('Error al obtener departamentos:',error);throw error;}};// Exportar todas las funciones como un objeto (opcional)\nexport default{getTiposAccion,getEstadisticas,getAccionesPendientes,getAcciones,getAccionById,getHistorialEmpleado,crearAccion,actualizarAccion,aprobarAccion,rechazarAccion,ejecutarAccion,eliminarAccion,subirDocumento,getDocumentosAccion,descargarDocumento,getEmpleados,getDepartamentos};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","getToken","localStorage","getItem","getHeaders","getTiposAccion","response","fetch","headers","json","error","console","getEstadisticas","getAccionesPendientes","getAcciones","filtros","arguments","length","undefined","params","URLSearchParams","tipo","append","estado","empleadoId","fechaDesde","fechaHasta","queryString","toString","url","getAccionById","accionId","getHistorialEmpleado","crearAccion","datos","method","body","JSON","stringify","actualizarAccion","aprobarAccion","comentarios","rechazarAccion","motivo","ejecutarAccion","eliminarAccion","subirDocumento","archivo","tipoDocumento","formData","FormData","getDocumentosAccion","descargarDocumento","rutaArchivo","nombreArchivo","replace","ok","Error","blob","window","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","success","getEmpleados","getDepartamentos"],"sources":["C:/Users/josemontedeoca/rrhh-system/frontend/src/api/accionesPersonalApi.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || 'http://192.168.0.239:5000/api';\r\n\r\n// Obtener token del localStorage\r\nconst getToken = () => localStorage.getItem('token');\r\n\r\n// Headers comunes\r\nconst getHeaders = () => ({\r\n  'Authorization': `Bearer ${getToken()}`,\r\n  'Content-Type': 'application/json'\r\n});\r\n\r\n// ===================== ACCIONES DE PERSONAL API =====================\r\n\r\n// Obtener todos los tipos de acción disponibles\r\nexport const getTiposAccion = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal/tipos`, {\r\n      headers: getHeaders()\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al obtener tipos de acción:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener estadísticas del dashboard\r\nexport const getEstadisticas = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal/estadisticas`, {\r\n      headers: getHeaders()\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al obtener estadísticas:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener acciones pendientes de aprobación\r\nexport const getAccionesPendientes = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal/pendientes`, {\r\n      headers: getHeaders()\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al obtener acciones pendientes:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener todas las acciones (con filtros opcionales)\r\nexport const getAcciones = async (filtros = {}) => {\r\n  try {\r\n    const params = new URLSearchParams();\r\n    if (filtros.tipo) params.append('tipo', filtros.tipo);\r\n    if (filtros.estado) params.append('estado', filtros.estado);\r\n    if (filtros.empleadoId) params.append('empleadoId', filtros.empleadoId);\r\n    if (filtros.fechaDesde) params.append('fechaDesde', filtros.fechaDesde);\r\n    if (filtros.fechaHasta) params.append('fechaHasta', filtros.fechaHasta);\r\n\r\n    const queryString = params.toString();\r\n    const url = queryString \r\n      ? `${API_URL}/acciones-personal?${queryString}`\r\n      : `${API_URL}/acciones-personal`;\r\n\r\n    const response = await fetch(url, {\r\n      headers: getHeaders()\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al obtener acciones:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener una acción específica por ID\r\nexport const getAccionById = async (accionId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal/${accionId}`, {\r\n      headers: getHeaders()\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al obtener acción:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener historial de un empleado\r\nexport const getHistorialEmpleado = async (empleadoId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal/historial/${empleadoId}`, {\r\n      headers: getHeaders()\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al obtener historial:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Crear nueva acción de personal\r\nexport const crearAccion = async (datos) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal`, {\r\n      method: 'POST',\r\n      headers: getHeaders(),\r\n      body: JSON.stringify(datos)\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al crear acción:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Actualizar acción (solo si está pendiente)\r\nexport const actualizarAccion = async (accionId, datos) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal/${accionId}`, {\r\n      method: 'PUT',\r\n      headers: getHeaders(),\r\n      body: JSON.stringify(datos)\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al actualizar acción:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Aprobar acción\r\nexport const aprobarAccion = async (accionId, comentarios = '') => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal/${accionId}/aprobar`, {\r\n      method: 'POST',\r\n      headers: getHeaders(),\r\n      body: JSON.stringify({ comentarios })\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al aprobar acción:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Rechazar acción\r\nexport const rechazarAccion = async (accionId, motivo) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal/${accionId}/rechazar`, {\r\n      method: 'POST',\r\n      headers: getHeaders(),\r\n      body: JSON.stringify({ motivo })\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al rechazar acción:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Ejecutar acción (aplicar cambios)\r\nexport const ejecutarAccion = async (accionId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal/${accionId}/ejecutar`, {\r\n      method: 'POST',\r\n      headers: getHeaders()\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al ejecutar acción:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Eliminar acción\r\nexport const eliminarAccion = async (accionId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal/${accionId}`, {\r\n      method: 'DELETE',\r\n      headers: getHeaders()\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al eliminar acción:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Subir documento a una acción\r\nexport const subirDocumento = async (accionId, archivo, tipoDocumento) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('documento', archivo);\r\n    formData.append('tipoDocumento', tipoDocumento);\r\n\r\n    const response = await fetch(`${API_URL}/acciones-personal/${accionId}/documentos`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${getToken()}`\r\n        // No incluir Content-Type para FormData, el browser lo configura automáticamente\r\n      },\r\n      body: formData\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al subir documento:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener documentos de una acción\r\nexport const getDocumentosAccion = async (accionId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/acciones-personal/${accionId}/documentos`, {\r\n      headers: getHeaders()\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al obtener documentos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Descargar documento\r\nexport const descargarDocumento = async (rutaArchivo, nombreArchivo) => {\r\n  try {\r\n    const response = await fetch(`${API_URL.replace('/api', '')}/${rutaArchivo}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${getToken()}`\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) throw new Error('Error al descargar documento');\r\n    \r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = nombreArchivo;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n    \r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error('Error al descargar documento:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ===================== APIS AUXILIARES (para formularios) =====================\r\n\r\n// Obtener empleados activos\r\nexport const getEmpleados = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/empleados`, {\r\n      headers: getHeaders()\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al obtener empleados:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener departamentos\r\nexport const getDepartamentos = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/departamentos`, {\r\n      headers: getHeaders()\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al obtener departamentos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Exportar todas las funciones como un objeto (opcional)\r\nexport default {\r\n  getTiposAccion,\r\n  getEstadisticas,\r\n  getAccionesPendientes,\r\n  getAcciones,\r\n  getAccionById,\r\n  getHistorialEmpleado,\r\n  crearAccion,\r\n  actualizarAccion,\r\n  aprobarAccion,\r\n  rechazarAccion,\r\n  ejecutarAccion,\r\n  eliminarAccion,\r\n  subirDocumento,\r\n  getDocumentosAccion,\r\n  descargarDocumento,\r\n  getEmpleados,\r\n  getDepartamentos\r\n};"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,+BAA+B,CAEhF;AACA,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAMC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAEpD;AACA,KAAM,CAAAC,UAAU,CAAGA,CAAA,IAAO,CACxB,eAAe,CAAE,UAAUH,QAAQ,CAAC,CAAC,EAAE,CACvC,cAAc,CAAE,kBAClB,CAAC,CAAC,CAEF;AAEA;AACA,MAAO,MAAM,CAAAI,cAAc,CAAG,KAAAA,CAAA,GAAY,CACxC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,0BAA0B,CAAE,CACjEW,OAAO,CAAEJ,UAAU,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,eAAe,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,iCAAiC,CAAE,CACxEW,OAAO,CAAEJ,UAAU,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CAC/C,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,+BAA+B,CAAE,CACtEW,OAAO,CAAEJ,UAAU,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,CAAEA,KAAK,CAAC,CAC7D,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,WAAW,CAAG,cAAAA,CAAA,CAAwB,IAAjB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC5C,GAAI,CACF,KAAM,CAAAG,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACpC,GAAIL,OAAO,CAACM,IAAI,CAAEF,MAAM,CAACG,MAAM,CAAC,MAAM,CAAEP,OAAO,CAACM,IAAI,CAAC,CACrD,GAAIN,OAAO,CAACQ,MAAM,CAAEJ,MAAM,CAACG,MAAM,CAAC,QAAQ,CAAEP,OAAO,CAACQ,MAAM,CAAC,CAC3D,GAAIR,OAAO,CAACS,UAAU,CAAEL,MAAM,CAACG,MAAM,CAAC,YAAY,CAAEP,OAAO,CAACS,UAAU,CAAC,CACvE,GAAIT,OAAO,CAACU,UAAU,CAAEN,MAAM,CAACG,MAAM,CAAC,YAAY,CAAEP,OAAO,CAACU,UAAU,CAAC,CACvE,GAAIV,OAAO,CAACW,UAAU,CAAEP,MAAM,CAACG,MAAM,CAAC,YAAY,CAAEP,OAAO,CAACW,UAAU,CAAC,CAEvE,KAAM,CAAAC,WAAW,CAAGR,MAAM,CAACS,QAAQ,CAAC,CAAC,CACrC,KAAM,CAAAC,GAAG,CAAGF,WAAW,CACnB,GAAG9B,OAAO,sBAAsB8B,WAAW,EAAE,CAC7C,GAAG9B,OAAO,oBAAoB,CAElC,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACsB,GAAG,CAAE,CAChCrB,OAAO,CAAEJ,UAAU,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAoB,aAAa,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC/C,GAAI,CACF,KAAM,CAAAzB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,sBAAsBkC,QAAQ,EAAE,CAAE,CACvEvB,OAAO,CAAEJ,UAAU,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAsB,oBAAoB,CAAG,KAAO,CAAAR,UAAU,EAAK,CACxD,GAAI,CACF,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,gCAAgC2B,UAAU,EAAE,CAAE,CACnFhB,OAAO,CAAEJ,UAAU,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAuB,WAAW,CAAG,KAAO,CAAAC,KAAK,EAAK,CAC1C,GAAI,CACF,KAAM,CAAA5B,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,oBAAoB,CAAE,CAC3DsC,MAAM,CAAE,MAAM,CACd3B,OAAO,CAAEJ,UAAU,CAAC,CAAC,CACrBgC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAC5B,CAAC,CAAC,CACF,MAAO,MAAM,CAAA5B,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA6B,gBAAgB,CAAG,KAAAA,CAAOR,QAAQ,CAAEG,KAAK,GAAK,CACzD,GAAI,CACF,KAAM,CAAA5B,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,sBAAsBkC,QAAQ,EAAE,CAAE,CACvEI,MAAM,CAAE,KAAK,CACb3B,OAAO,CAAEJ,UAAU,CAAC,CAAC,CACrBgC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAC5B,CAAC,CAAC,CACF,MAAO,MAAM,CAAA5B,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA8B,aAAa,CAAG,cAAAA,CAAOT,QAAQ,CAAuB,IAArB,CAAAU,WAAW,CAAAzB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC5D,GAAI,CACF,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,sBAAsBkC,QAAQ,UAAU,CAAE,CAC/EI,MAAM,CAAE,MAAM,CACd3B,OAAO,CAAEJ,UAAU,CAAC,CAAC,CACrBgC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEG,WAAY,CAAC,CACtC,CAAC,CAAC,CACF,MAAO,MAAM,CAAAnC,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAgC,cAAc,CAAG,KAAAA,CAAOX,QAAQ,CAAEY,MAAM,GAAK,CACxD,GAAI,CACF,KAAM,CAAArC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,sBAAsBkC,QAAQ,WAAW,CAAE,CAChFI,MAAM,CAAE,MAAM,CACd3B,OAAO,CAAEJ,UAAU,CAAC,CAAC,CACrBgC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEK,MAAO,CAAC,CACjC,CAAC,CAAC,CACF,MAAO,MAAM,CAAArC,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAkC,cAAc,CAAG,KAAO,CAAAb,QAAQ,EAAK,CAChD,GAAI,CACF,KAAM,CAAAzB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,sBAAsBkC,QAAQ,WAAW,CAAE,CAChFI,MAAM,CAAE,MAAM,CACd3B,OAAO,CAAEJ,UAAU,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAmC,cAAc,CAAG,KAAO,CAAAd,QAAQ,EAAK,CAChD,GAAI,CACF,KAAM,CAAAzB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,sBAAsBkC,QAAQ,EAAE,CAAE,CACvEI,MAAM,CAAE,QAAQ,CAChB3B,OAAO,CAAEJ,UAAU,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAoC,cAAc,CAAG,KAAAA,CAAOf,QAAQ,CAAEgB,OAAO,CAAEC,aAAa,GAAK,CACxE,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAAC3B,MAAM,CAAC,WAAW,CAAEyB,OAAO,CAAC,CACrCE,QAAQ,CAAC3B,MAAM,CAAC,eAAe,CAAE0B,aAAa,CAAC,CAE/C,KAAM,CAAA1C,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,sBAAsBkC,QAAQ,aAAa,CAAE,CAClFI,MAAM,CAAE,MAAM,CACd3B,OAAO,CAAE,CACP,eAAe,CAAE,UAAUP,QAAQ,CAAC,CAAC,EACrC;AACF,CAAC,CACDmC,IAAI,CAAEa,QACR,CAAC,CAAC,CACF,MAAO,MAAM,CAAA3C,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAyC,mBAAmB,CAAG,KAAO,CAAApB,QAAQ,EAAK,CACrD,GAAI,CACF,KAAM,CAAAzB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,sBAAsBkC,QAAQ,aAAa,CAAE,CAClFvB,OAAO,CAAEJ,UAAU,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA0C,kBAAkB,CAAG,KAAAA,CAAOC,WAAW,CAAEC,aAAa,GAAK,CACtE,GAAI,CACF,KAAM,CAAAhD,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,CAAC0D,OAAO,CAAC,MAAM,CAAE,EAAE,CAAC,IAAIF,WAAW,EAAE,CAAE,CAC5E7C,OAAO,CAAE,CACP,eAAe,CAAE,UAAUP,QAAQ,CAAC,CAAC,EACvC,CACF,CAAC,CAAC,CAEF,GAAI,CAACK,QAAQ,CAACkD,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CAEjE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAApD,QAAQ,CAACoD,IAAI,CAAC,CAAC,CAClC,KAAM,CAAA7B,GAAG,CAAG8B,MAAM,CAACC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC,CAC5C,KAAM,CAAAI,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGpC,GAAG,CACfiC,IAAI,CAACI,QAAQ,CAAGZ,aAAa,CAC7BS,QAAQ,CAAC3B,IAAI,CAAC+B,WAAW,CAACL,IAAI,CAAC,CAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC,CACZL,QAAQ,CAAC3B,IAAI,CAACiC,WAAW,CAACP,IAAI,CAAC,CAC/BH,MAAM,CAACC,GAAG,CAACU,eAAe,CAACzC,GAAG,CAAC,CAE/B,MAAO,CAAE0C,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAO7D,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AAEA;AACA,MAAO,MAAM,CAAA8D,YAAY,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF,KAAM,CAAAlE,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,YAAY,CAAE,CACnDW,OAAO,CAAEJ,UAAU,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA+D,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CAC1C,GAAI,CACF,KAAM,CAAAnE,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,gBAAgB,CAAE,CACvDW,OAAO,CAAEJ,UAAU,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,cAAe,CACbL,cAAc,CACdO,eAAe,CACfC,qBAAqB,CACrBC,WAAW,CACXgB,aAAa,CACbE,oBAAoB,CACpBC,WAAW,CACXM,gBAAgB,CAChBC,aAAa,CACbE,cAAc,CACdE,cAAc,CACdC,cAAc,CACdC,cAAc,CACdK,mBAAmB,CACnBC,kBAAkB,CAClBoB,YAAY,CACZC,gBACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
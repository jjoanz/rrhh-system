{"ast":null,"code":"// src/api/nominaService.js\n// src/api/nominaService.js\nimport api from './api'; // usa la instancia unificada con token e interceptores\n\n// Obtener todas las nóminas con filtros opcionales\nexport const getNominas = async (filtros = {}) => {\n  try {\n    const params = new URLSearchParams();\n    if (filtros.periodo) params.append('periodo', filtros.periodo);\n    if (filtros.empleadoId) params.append('empleadoId', filtros.empleadoId);\n    if (filtros.estado) params.append('estado', filtros.estado);\n    const response = await api.get(`/nomina/list?${params}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener nóminas:', error);\n    throw error;\n  }\n};\n\n// Obtener detalle de nómina por ID\nexport const getNominaById = async id => {\n  try {\n    const response = await api.get(`/nomina/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener detalle de nómina:', error);\n    throw error;\n  }\n};\n\n// Procesar nueva nómina\nexport const procesarNomina = async data => {\n  try {\n    const response = await api.post('/nomina/procesar', data);\n    return response.data;\n  } catch (error) {\n    console.error('Error al procesar nómina:', error);\n    throw error;\n  }\n};\n\n// Marcar nóminas como pagadas\nexport const marcarNominaPagada = async data => {\n  try {\n    const response = await api.put('/nomina/pagar', data);\n    return response.data;\n  } catch (error) {\n    console.error('Error al marcar nómina como pagada:', error);\n    throw error;\n  }\n};\n\n// Generar reporte de nómina\nexport const generarReporteNomina = async (filtros = {}) => {\n  try {\n    const params = new URLSearchParams();\n    if (filtros.periodo) params.append('periodo', filtros.periodo);\n    if (filtros.tipo) params.append('tipo', filtros.tipo);\n    const response = await api.get(`/nomina/reportes/generar?${params}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al generar reporte:', error);\n    throw error;\n  }\n};\n\n// Eliminar nómina\nexport const eliminarNomina = async id => {\n  try {\n    const response = await api.delete(`/nomina/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar nómina:', error);\n    throw error;\n  }\n};\n\n// Obtener empleados activos para nómina\nexport const getEmpleadosActivos = async () => {\n  try {\n    const response = await api.get('/nomina/empleados-activos');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener empleados activos:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","getNominas","filtros","params","URLSearchParams","periodo","append","empleadoId","estado","response","get","data","error","console","getNominaById","id","procesarNomina","post","marcarNominaPagada","put","generarReporteNomina","tipo","eliminarNomina","delete","getEmpleadosActivos"],"sources":["C:/Users/josemontedeoca/rrhh-system/frontend/src/api/nominaService.js"],"sourcesContent":["// src/api/nominaService.js\r\n// src/api/nominaService.js\r\nimport api from './api'; // usa la instancia unificada con token e interceptores\r\n\r\n// Obtener todas las nóminas con filtros opcionales\r\nexport const getNominas = async (filtros = {}) => {\r\n  try {\r\n    const params = new URLSearchParams();\r\n    if (filtros.periodo) params.append('periodo', filtros.periodo);\r\n    if (filtros.empleadoId) params.append('empleadoId', filtros.empleadoId);\r\n    if (filtros.estado) params.append('estado', filtros.estado);\r\n\r\n    const response = await api.get(`/nomina/list?${params}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener nóminas:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener detalle de nómina por ID\r\nexport const getNominaById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/nomina/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener detalle de nómina:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Procesar nueva nómina\r\nexport const procesarNomina = async (data) => {\r\n  try {\r\n    const response = await api.post('/nomina/procesar', data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al procesar nómina:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Marcar nóminas como pagadas\r\nexport const marcarNominaPagada = async (data) => {\r\n  try {\r\n    const response = await api.put('/nomina/pagar', data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al marcar nómina como pagada:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Generar reporte de nómina\r\nexport const generarReporteNomina = async (filtros = {}) => {\r\n  try {\r\n    const params = new URLSearchParams();\r\n    if (filtros.periodo) params.append('periodo', filtros.periodo);\r\n    if (filtros.tipo) params.append('tipo', filtros.tipo);\r\n\r\n    const response = await api.get(`/nomina/reportes/generar?${params}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al generar reporte:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Eliminar nómina\r\nexport const eliminarNomina = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/nomina/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al eliminar nómina:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener empleados activos para nómina\r\nexport const getEmpleadosActivos = async () => {\r\n  try {\r\n    const response = await api.get('/nomina/empleados-activos');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener empleados activos:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}